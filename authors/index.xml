<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Authors | Tian Li</title>
    <link>https://tianlicfd.github.io/authors/</link>
      <atom:link href="https://tianlicfd.github.io/authors/index.xml" rel="self" type="application/rss+xml" />
    <description>Authors</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â© 2019 Tian Li</copyright><lastBuildDate>Thu, 13 Jun 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://tianlicfd.github.io/img/icon-192.png</url>
      <title>Authors</title>
      <link>https://tianlicfd.github.io/authors/</link>
    </image>
    
    <item>
      <title></title>
      <link>https://tianlicfd.github.io/authors/admin/</link>
      <pubDate>Thu, 13 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/admin/</guid>
      <description>&lt;p&gt;Tian Li is a Associate Professor at Department of Energy and Process Engineering, Norwegian University of Science and Technology. He is a part of the &lt;a href=&#34;https://www.ntnu.edu/comkin/&#34; target=&#34;_blank&#34;&gt;ComKin Group&lt;/a&gt;, which applies modern numerical methods and experimental studies to problems arising in combustion systems, with a special emphasis on clean and sustainable energy production.&lt;/p&gt;

&lt;p&gt;Knowledge connects people. Here is a map of my selected collaborators and contacts.&lt;/p&gt;

&lt;div style=&#34;width:100%;&#34;&gt;&lt;div style=&#34;position:relative;width:100%;height:0;padding-bottom:60%;&#34;&gt;&lt;iframe src=&#34;data:text/html;charset=utf-8;base64,PCFET0NUWVBFIGh0bWw+CjxoZWFkPiAgICAKICAgIDxtZXRhIGh0dHAtZXF1aXY9ImNvbnRlbnQtdHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04IiAvPgogICAgCiAgICAgICAgPHNjcmlwdD4KICAgICAgICAgICAgTF9OT19UT1VDSCA9IGZhbHNlOwogICAgICAgICAgICBMX0RJU0FCTEVfM0QgPSBmYWxzZTsKICAgICAgICA8L3NjcmlwdD4KICAgIAogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vbGVhZmxldEAxLjUuMS9kaXN0L2xlYWZsZXQuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vY29kZS5qcXVlcnkuY29tL2pxdWVyeS0xLjEyLjQubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL21heGNkbi5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC8zLjIuMC9qcy9ib290c3RyYXAubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9MZWFmbGV0LmF3ZXNvbWUtbWFya2Vycy8yLjAuMi9sZWFmbGV0LmF3ZXNvbWUtbWFya2Vycy5qcyI+PC9zY3JpcHQ+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vbGVhZmxldEAxLjUuMS9kaXN0L2xlYWZsZXQuY3NzIi8+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vbWF4Y2RuLmJvb3RzdHJhcGNkbi5jb20vYm9vdHN0cmFwLzMuMi4wL2Nzcy9ib290c3RyYXAubWluLmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL21heGNkbi5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC8zLjIuMC9jc3MvYm9vdHN0cmFwLXRoZW1lLm1pbi5jc3MiLz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9mb250LWF3ZXNvbWUvNC42LjMvY3NzL2ZvbnQtYXdlc29tZS5taW4uY3NzIi8+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL0xlYWZsZXQuYXdlc29tZS1tYXJrZXJzLzIuMC4yL2xlYWZsZXQuYXdlc29tZS1tYXJrZXJzLmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL3Jhd2Nkbi5naXRoYWNrLmNvbS9weXRob24tdmlzdWFsaXphdGlvbi9mb2xpdW0vbWFzdGVyL2ZvbGl1bS90ZW1wbGF0ZXMvbGVhZmxldC5hd2Vzb21lLnJvdGF0ZS5jc3MiLz4KICAgIDxzdHlsZT5odG1sLCBib2R5IHt3aWR0aDogMTAwJTtoZWlnaHQ6IDEwMCU7bWFyZ2luOiAwO3BhZGRpbmc6IDA7fTwvc3R5bGU+CiAgICA8c3R5bGU+I21hcCB7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7Ym90dG9tOjA7cmlnaHQ6MDtsZWZ0OjA7fTwvc3R5bGU+CiAgICAKICAgICAgICAgICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwKICAgICAgICAgICAgICAgIGluaXRpYWwtc2NhbGU9MS4wLCBtYXhpbXVtLXNjYWxlPTEuMCwgdXNlci1zY2FsYWJsZT1ubyIgLz4KICAgICAgICAgICAgPHN0eWxlPgogICAgICAgICAgICAgICAgI21hcF81MGZhNzVhMTg3YzU0YzRlOGQzYjRmYjI5MzFhYWRlZSB7CiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAuMCU7CiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAuMCU7CiAgICAgICAgICAgICAgICAgICAgbGVmdDogMC4wJTsKICAgICAgICAgICAgICAgICAgICB0b3A6IDAuMCU7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIDwvc3R5bGU+CiAgICAgICAgCjwvaGVhZD4KPGJvZHk+ICAgIAogICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvbGl1bS1tYXAiIGlkPSJtYXBfNTBmYTc1YTE4N2M1NGM0ZThkM2I0ZmIyOTMxYWFkZWUiID48L2Rpdj4KICAgICAgICAKPC9ib2R5Pgo8c2NyaXB0PiAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFwXzUwZmE3NWExODdjNTRjNGU4ZDNiNGZiMjkzMWFhZGVlID0gTC5tYXAoCiAgICAgICAgICAgICAgICAibWFwXzUwZmE3NWExODdjNTRjNGU4ZDNiNGZiMjkzMWFhZGVlIiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBjZW50ZXI6IFs2My40MTkxNDksIDEwLjQwMzk5N10sCiAgICAgICAgICAgICAgICAgICAgY3JzOiBMLkNSUy5FUFNHMzg1NywKICAgICAgICAgICAgICAgICAgICB6b29tOiAyLAogICAgICAgICAgICAgICAgICAgIHpvb21Db250cm9sOiB0cnVlLAogICAgICAgICAgICAgICAgICAgIHByZWZlckNhbnZhczogZmFsc2UsCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICk7CgogICAgICAgICAgICAKCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHRpbGVfbGF5ZXJfZjM3NzYzZGM0NWIzNGQyYjg1ZDAwNDFhNGQ3Y2I4ZTMgPSBMLnRpbGVMYXllcigKICAgICAgICAgICAgICAgICJodHRwczovL3tzfS50aWxlLm9wZW5zdHJlZXRtYXAub3JnL3t6fS97eH0ve3l9LnBuZyIsCiAgICAgICAgICAgICAgICB7ImF0dHJpYnV0aW9uIjogIkRhdGEgYnkgXHUwMDI2Y29weTsgXHUwMDNjYSBocmVmPVwiaHR0cDovL29wZW5zdHJlZXRtYXAub3JnXCJcdTAwM2VPcGVuU3RyZWV0TWFwXHUwMDNjL2FcdTAwM2UsIHVuZGVyIFx1MDAzY2EgaHJlZj1cImh0dHA6Ly93d3cub3BlbnN0cmVldG1hcC5vcmcvY29weXJpZ2h0XCJcdTAwM2VPRGJMXHUwMDNjL2FcdTAwM2UuIiwgImRldGVjdFJldGluYSI6IGZhbHNlLCAibWF4TmF0aXZlWm9vbSI6IDE4LCAibWF4Wm9vbSI6IDE4LCAibWluWm9vbSI6IDAsICJub1dyYXAiOiBmYWxzZSwgIm9wYWNpdHkiOiAxLCAic3ViZG9tYWlucyI6ICJhYmMiLCAidG1zIjogZmFsc2V9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzUwZmE
3NWExODdjNTRjNGU4ZDNiNGZiMjkzMWFhZGVlKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyXzgyNjU0MDExZjZlYTQ4NDhiNzkwYTUzODk0ZDRkNTBiID0gTC5tYXJrZXIoCiAgICAgICAgICAgICAgICBbNjMuNDE5MTQ5LCAxMC40MDM5OTddLAogICAgICAgICAgICAgICAge30KICAgICAgICAgICAgKS5hZGRUbyhtYXBfNTBmYTc1YTE4N2M1NGM0ZThkM2I0ZmIyOTMxYWFkZWUpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBpY29uX2JiNDMwYzkzYmVlZTQyYWRhOTExYzk0OTQ3YzZhMjI5ID0gTC5Bd2Vzb21lTWFya2Vycy5pY29uKAogICAgICAgICAgICAgICAgeyJleHRyYUNsYXNzZXMiOiAiZmEtcm90YXRlLTAiLCAiaWNvbiI6ICJpbmZvLXNpZ24iLCAiaWNvbkNvbG9yIjogIndoaXRlIiwgIm1hcmtlckNvbG9yIjogInJlZCIsICJwcmVmaXgiOiAiZ2x5cGhpY29uIn0KICAgICAgICAgICAgKTsKICAgICAgICAgICAgbWFya2VyXzgyNjU0MDExZjZlYTQ4NDhiNzkwYTUzODk0ZDRkNTBiLnNldEljb24oaWNvbl9iYjQzMGM5M2JlZWU0MmFkYTkxMWM5NDk0N2M2YTIyOSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfYmI5MTk4MzYyOGQ1NDZmYmFiMjZmZTE0ZmE2ZDY2ZWUgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiA1MDB9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBpX2ZyYW1lXzQ0N2E0NjJhZmE4ZTQ3ODRiNzAwYTI2MjkwMDA5YmI0ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FLSUNBZ0lEeG9NejVQUmtaSlEwVThMMmd6UGdvZ0lDQWdQR0krVG05eWQyVm5hV0Z1SUZWdWFYWmxjbk5wZEhrZ2IyWWdVMk5wWlc1alpTQmhibVFnVkdWamFHNXZiRzluZVR3dllqNEtJQ0FnSUR4d1BrUmxjR0Z5ZEcxbGJuUWdiMllnUlc1bGNtZDVJR0Z1WkNCUWNtOWpaWE56SUVWdVoybHVaV1Z5YVc1blBDOXdQZ29nSUNBZ1BIQStWSEp2Ym1Sb1pXbHRMQ0JPYjNKM1lYazhMM0ErQ2lBZ0lDQT0iIHdpZHRoPSIzMDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIyMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICBwb3B1cF9iYjkxOTgzNjI4ZDU0NmZiYWIyNmZlMTRmYTZkNjZlZS5zZXRDb250ZW50KGlfZnJhbWVfNDQ3YTQ2MmFmYThlNDc4NGI3MDBhMjYyOTAwMDliYjQpOwogICAgICAgIAoKICAgICAgICBtYXJrZXJfODI2NTQwMTFmNmVhNDg0OGI3OTBhNTM4OTRkNGQ1MGIuYmluZFBvcHVwKHBvcHVwX2JiOTE5ODM2MjhkNTQ2ZmJhYjI2ZmUxNGZhNmQ2NmVlKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBtYXJrZXJfODI2NTQwMTFmNmVhNDg0OGI3OTBhNTM4OTRkNGQ1MGIuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2xpY2sgbWUhCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyX2IzN2Y2Mjk4ZWNlYjRlYWNhYWIzMzFlZGY3MmVkYjkwID0gTC5tYXJrZXIoCiAgICAgICAgICAgICAgICBbNjMuMzU2NzYxLCAxMC40MjU0MTFdLAogICAgICAgICAgICAgICAge30KICAgICAgICAgICAgKS5hZGRUbyhtYXBfNTBmYTc1YTE4N2M1NGM0ZThkM2I0ZmIyOTMxYWFkZWUpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBpY29uX2RkMDNlMzNiOGNjODQ2MGQ4YTZkNWVkMjlmZWY0YTZjID0gTC5Bd2Vzb21lTWFya2Vycy5pY29uKAogICAgICAgICAgICAgICAgeyJleHRyYUNsYXNzZXMiOiAiZmEtcm90YXRlLTAiLCAiaWNvbiI6ICJpbmZvLXNpZ24iLCAiaWNvbkNvbG9yIjogIndoaXRlIiwgIm1hcmtlckNvbG9yIjogImJsdWUiLCAicHJlZml4IjogImdseXBoaWNvbiJ9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIG1hcmtlcl9iMzdmNjI5OGVjZWI0ZWFjYWFiMzMxZWRmNzJlZGI5MC5zZXRJY29uKGljb25fZGQwM2UzM2I4Y2M4NDYwZDhhNmQ1ZWQyOWZlZjRhNmMpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2Q5MTA1MDdkMWI2MTQwNTQ4ZWY1M2U4ZjU3ZmFmMTRjID0gTC5wb3B1cCh7Im1heFdpZHRoIjogNTAwfSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaV9mcmFtZV85YmM4NjZlNDc1MmQ0NTI4YTJkZTkwNWMyNWE0M2QwYiA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBS0lDQWdJRHhpUGxKSlUwVWdSbWx5WlNCU1pYTmxZWEpqYUR3dllqNEtJQ0FnSUR4d1BsUnliMjVrYUdWcGJTd2dUbTl5ZDJGNVBDOXdQZ29nSUNBZyIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2Q5MTA1MDdkMWI2MTQwNTQ4ZWY1M2U4ZjU3ZmFmMTRjLnNldENvbnRlbnQoaV9mcmFtZV85YmM4NjZlNDc1MmQ0NTI4YTJkZTkwNWMyNWE0M2QwYik7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl9iMzdmNjI5OGVjZWI0ZWFjYWFiMzMxZWRmNzJlZGI5MC5iaW5kUG9wdXAocG9wdXBfZDkxMDUwN2QxYjYxNDA1NDhlZjUzZThmNTdmYWYxNGMpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl9iMzdmNjI5OGVjZWI0ZWFjYWFiMzMxZWRmNzJlZGI5MC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfYjJkOTI0Mjg2NDA0NDI2NmEwNGNjMjk5NjVlZGRjN2MgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFs2My40MTc0ODUsIDEwLjQwMjIzXSwKICAgICAgICAgICAgICAgIHt9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzUwZmE3NWExODd
jNTRjNGU4ZDNiNGZiMjkzMWFhZGVlKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgaWNvbl8xYWE3MmY3NDNjMzY0OWEyYThmMGQwZmUwZTg0MTQ1NiA9IEwuQXdlc29tZU1hcmtlcnMuaWNvbigKICAgICAgICAgICAgICAgIHsiZXh0cmFDbGFzc2VzIjogImZhLXJvdGF0ZS0wIiwgImljb24iOiAiaW5mby1zaWduIiwgImljb25Db2xvciI6ICJ3aGl0ZSIsICJtYXJrZXJDb2xvciI6ICJibHVlIiwgInByZWZpeCI6ICJnbHlwaGljb24ifQogICAgICAgICAgICApOwogICAgICAgICAgICBtYXJrZXJfYjJkOTI0Mjg2NDA0NDI2NmEwNGNjMjk5NjVlZGRjN2Muc2V0SWNvbihpY29uXzFhYTcyZjc0M2MzNjQ5YTJhOGYwZDBmZTBlODQxNDU2KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8zYTUxM2U2OWY0ZjI0YWZiYWZjNjcyNzg2ZWU3ZmFlNiA9IEwucG9wdXAoeyJtYXhXaWR0aCI6IDUwMH0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGlfZnJhbWVfNzRkYWQ0NWYwOTg0NDRlZWE1YmFhYWE5NDM1MDA5NjggPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQUtJQ0FnSUR4aVBsTnBiblJsWmlCRmJtVnlaM2tnVW1WelpXRnlZMmc4TDJJK0NpQWdJQ0E4Y0Q1VWNtOXVaR2hsYVcwc0lFNXZjbmRoZVR3dmNENEtJQ0FnSUE9PSIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzNhNTEzZTY5ZjRmMjRhZmJhZmM2NzI3ODZlZTdmYWU2LnNldENvbnRlbnQoaV9mcmFtZV83NGRhZDQ1ZjA5ODQ0NGVlYTViYWFhYTk0MzUwMDk2OCk7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl9iMmQ5MjQyODY0MDQ0MjY2YTA0Y2MyOTk2NWVkZGM3Yy5iaW5kUG9wdXAocG9wdXBfM2E1MTNlNjlmNGYyNGFmYmFmYzY3Mjc4NmVlN2ZhZTYpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl9iMmQ5MjQyODY0MDQ0MjY2YTA0Y2MyOTk2NWVkZGM3Yy5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfODgzMTQxZGZhMDBlNDNlMDkzYWMzNDA0MzkyODVjZDMgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFszOS4xMTA2MzIsIDExNy4xNzc0NDVdLAogICAgICAgICAgICAgICAge30KICAgICAgICAgICAgKS5hZGRUbyhtYXBfNTBmYTc1YTE4N2M1NGM0ZThkM2I0ZmIyOTMxYWFkZWUpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBpY29uXzg0YjY3NzA2NTAyNTQ4MTI5ZGM5ZDMzODVkYzgwZWJjID0gTC5Bd2Vzb21lTWFya2Vycy5pY29uKAogICAgICAgICAgICAgICAgeyJleHRyYUNsYXNzZXMiOiAiZmEtcm90YXRlLTAiLCAiaWNvbiI6ICJpbmZvLXNpZ24iLCAiaWNvbkNvbG9yIjogIndoaXRlIiwgIm1hcmtlckNvbG9yIjogImJsdWUiLCAicHJlZml4IjogImdseXBoaWNvbiJ9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIG1hcmtlcl84ODMxNDFkZmEwMGU0M2UwOTNhYzM0MDQzOTI4NWNkMy5zZXRJY29uKGljb25fODRiNjc3MDY1MDI1NDgxMjlkYzlkMzM4NWRjODBlYmMpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzg5MWI4ZDAyY2ZkMTRmZmRiMzRkMWUxZTQzYzQ3OWU2ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogNTAwfSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaV9mcmFtZV8yMzg1Yzg3MTQxN2U0MGM1YWRjZWVlYWE2NmM1ZjViNSA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBS0lDQWdJRHhpUGxScFlXNXFhVzRnVlc1cGRtVnljMmwwZVR3dllqNEtJQ0FnSUR4d1BsTjBZWFJsSUV0bGVTQk1ZV0p2Y21GMGIzSjVJRzltSUdWdVoybHVaU0JqYjIxaWRYTjBhVzl1UEM5d1Bnb2dJQ0FnUEhBK1ZHbGhibXBwYml3Z1EyaHBibUU4TDNBK0NpQWdJQ0E9IiB3aWR0aD0iMzAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMjAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgcG9wdXBfODkxYjhkMDJjZmQxNGZmZGIzNGQxZTFlNDNjNDc5ZTYuc2V0Q29udGVudChpX2ZyYW1lXzIzODVjODcxNDE3ZTQwYzVhZGNlZWVhYTY2YzVmNWI1KTsKICAgICAgICAKCiAgICAgICAgbWFya2VyXzg4MzE0MWRmYTAwZTQzZTA5M2FjMzQwNDM5Mjg1Y2QzLmJpbmRQb3B1cChwb3B1cF84OTFiOGQwMmNmZDE0ZmZkYjM0ZDFlMWU0M2M0NzllNikKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgbWFya2VyXzg4MzE0MWRmYTAwZTQzZTA5M2FjMzQwNDM5Mjg1Y2QzLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENsaWNrIG1lIQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIG1hcmtlcl9jZmVkYmNlOWFjZGU0MDk2OGRkOGQ4MzFkNTY1OTRiZSA9IEwubWFya2VyKAogICAgICAgICAgICAgICAgWzMxLjI4ODk0NSwgMTIxLjIxMDQ5OV0sCiAgICAgICAgICAgICAgICB7fQogICAgICAgICAgICApLmFkZFRvKG1hcF81MGZhNzVhMTg3YzU0YzRlOGQzYjRmYjI5MzFhYWRlZSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGljb25fMzlmOTA4M2YyNDUxNDkwMmE5Mzc1MTM3NGI3NTlkYzIgPSBMLkF3ZXNvbWVNYXJrZXJzLmljb24oCiAgICAgICAgICAgICAgICB7ImV4dHJhQ2xhc3NlcyI6ICJmYS1yb3RhdGUtMCIsICJpY29uIjogImluZm8tc2lnbiIsICJpY29uQ29sb3IiOiAid2hpdGUiLCAibWFya2VyQ29sb3IiOiAiYmx1ZSIsICJwcmVmaXgiOiAiZ2x5cGhpY29uIn0KICAgICAgICAgICA
gKTsKICAgICAgICAgICAgbWFya2VyX2NmZWRiY2U5YWNkZTQwOTY4ZGQ4ZDgzMWQ1NjU5NGJlLnNldEljb24oaWNvbl8zOWY5MDgzZjI0NTE0OTAyYTkzNzUxMzc0Yjc1OWRjMik7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfNmNmZjVlYjUxNTViNDc5NmIwZWU1YmNlMGEwMDRmNDAgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiA1MDB9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBpX2ZyYW1lXzdiNGMzMDUyMjY5MjQ0MDE5ZWY0ZTc4ZDNkODIyNzVkID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FLSUNBZ0lEeGlQbFJ2Ym1kcWFTQlZibWwyWlhKemFYUjVQQzlpUGdvZ0lDQWdQSEErVTJOb2IyOXNJRzltSUVGMWRHOXRiM1JwZG1VZ1UzUjFaR2xsY3p3dmNENEtJQ0FnSUR4d1BsTm9ZVzVuYUdrc0lFTm9hVzVoUEM5d1Bnb2dJQ0FnIiB3aWR0aD0iMzAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMjAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgcG9wdXBfNmNmZjVlYjUxNTViNDc5NmIwZWU1YmNlMGEwMDRmNDAuc2V0Q29udGVudChpX2ZyYW1lXzdiNGMzMDUyMjY5MjQ0MDE5ZWY0ZTc4ZDNkODIyNzVkKTsKICAgICAgICAKCiAgICAgICAgbWFya2VyX2NmZWRiY2U5YWNkZTQwOTY4ZGQ4ZDgzMWQ1NjU5NGJlLmJpbmRQb3B1cChwb3B1cF82Y2ZmNWViNTE1NWI0Nzk2YjBlZTViY2UwYTAwNGY0MCkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgbWFya2VyX2NmZWRiY2U5YWNkZTQwOTY4ZGQ4ZDgzMWQ1NjU5NGJlLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENsaWNrIG1lIQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIG1hcmtlcl9iNmU1MjA1ZTA5MDA0ODM3OTViODQwMjMxZWM1NmNlNyA9IEwubWFya2VyKAogICAgICAgICAgICAgICAgWzM0LjI0NjIxNCwgMTA4Ljk4NzQ5Nl0sCiAgICAgICAgICAgICAgICB7fQogICAgICAgICAgICApLmFkZFRvKG1hcF81MGZhNzVhMTg3YzU0YzRlOGQzYjRmYjI5MzFhYWRlZSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGljb25fNWVhZDg2NjI2MGQ3NGY4YzgyZmFjZjI1MDQxZjY3MmYgPSBMLkF3ZXNvbWVNYXJrZXJzLmljb24oCiAgICAgICAgICAgICAgICB7ImV4dHJhQ2xhc3NlcyI6ICJmYS1yb3RhdGUtMCIsICJpY29uIjogImluZm8tc2lnbiIsICJpY29uQ29sb3IiOiAid2hpdGUiLCAibWFya2VyQ29sb3IiOiAiYmx1ZSIsICJwcmVmaXgiOiAiZ2x5cGhpY29uIn0KICAgICAgICAgICAgKTsKICAgICAgICAgICAgbWFya2VyX2I2ZTUyMDVlMDkwMDQ4Mzc5NWI4NDAyMzFlYzU2Y2U3LnNldEljb24oaWNvbl81ZWFkODY2MjYwZDc0ZjhjODJmYWNmMjUwNDFmNjcyZik7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfYWY5ZDdjNzhhYzk1NDA5NTk0NmI4NTlhMTBkMGNlMmIgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiA1MDB9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBpX2ZyYW1lXzZiNzA2MzkyYTE2NzQ5N2JhMWViMzgzNDJmZWUzN2FmID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FLSUNBZ0lEeGlQbGhwSjJGdUlFcHBZVzkwYjI1bklGVnVhWFpsY25OcGRIazhMMkkrQ2lBZ0lDQThjRDVUWTJodmIyd2diMllnUlc1bGNtZDVJR0Z1WkNCUWIzZGxjaUJGYm1kcGJtVmxjbWx1Wnp3dmNENEtJQ0FnSUR4d1BsaHBKMkZ1TENCRGFHbHVZVHd2Y0Q0S0lDQWdJQT09IiB3aWR0aD0iMzAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMjAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgcG9wdXBfYWY5ZDdjNzhhYzk1NDA5NTk0NmI4NTlhMTBkMGNlMmIuc2V0Q29udGVudChpX2ZyYW1lXzZiNzA2MzkyYTE2NzQ5N2JhMWViMzgzNDJmZWUzN2FmKTsKICAgICAgICAKCiAgICAgICAgbWFya2VyX2I2ZTUyMDVlMDkwMDQ4Mzc5NWI4NDAyMzFlYzU2Y2U3LmJpbmRQb3B1cChwb3B1cF9hZjlkN2M3OGFjOTU0MDk1OTQ2Yjg1OWExMGQwY2UyYikKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgbWFya2VyX2I2ZTUyMDVlMDkwMDQ4Mzc5NWI4NDAyMzFlYzU2Y2U3LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENsaWNrIG1lIQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIG1hcmtlcl9hYWMxMGJlNDYyNmY0NjJlYjVlZGM3ODg3MmQ2NGExYiA9IEwubWFya2VyKAogICAgICAgICAgICAgICAgWzM5Ljk5ODI3NSwgMTE2LjMzMzI3OF0sCiAgICAgICAgICAgICAgICB7fQogICAgICAgICAgICApLmFkZFRvKG1hcF81MGZhNzVhMTg3YzU0YzRlOGQzYjRmYjI5MzFhYWRlZSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGljb25fNzUyOTA0NDk5NjAyNDU4ZDkzODhmYmI3YjEyNzFmYzcgPSBMLkF3ZXNvbWVNYXJrZXJzLmljb24oCiAgICAgICAgICAgICAgICB7ImV4dHJhQ2xhc3NlcyI6ICJmYS1yb3RhdGUtMCIsICJpY29uIjogImluZm8tc2lnbiIsICJpY29uQ29sb3IiOiAid2hpdGUiLCAibWFya2VyQ29sb3IiOiAiYmx1ZSIsICJwcmVmaXgiOiAiZ2x5cGhpY29uIn0KICAgICAgICAgICAgKTsKICAgICAgICAgICAgbWFya2VyX2FhYzEwYmU0NjI2ZjQ2MmViNWVkYzc4ODcyZDY0YTFiLnNldEljb24oaWNvbl83NTI5MDQ0OTk2MDI0NThkOTM4OGZiYjdiMTI3MWZjNyk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfMDU1OTY3ZGZkMDAwNDgxY2JhYTI5ODcyZDNiNWRiMTcgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiA1MDB9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZ
hciBpX2ZyYW1lXzE0ZTMxYzI4ZWQxZTRmZjA4M2NkM2ZhNmM4YzY4ZGVhID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FLSUNBZ0lEeGlQbFJ6YVc1bmFIVmhJRlZ1YVhabGNuTnBkSGs4TDJJK0NpQWdJQ0E4Y0Q1VFkyaHZiMndnYjJZZ1lXVnliM053WVdObEwxTjBZWFJsSUV0bGVTQk1ZV0p2Y21GMGIzSjVJRzltSUVGMWRHOXRiM1JwZG1VZ1UyRm1aWFI1SUdGdVpDQkZibVZ5WjNrZ1BDOXdQZ29nSUNBZ1BIQStVMmhoYm1kb2FTd2dRMmhwYm1FOEwzQStDaUFnSUNBPSIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzA1NTk2N2RmZDAwMDQ4MWNiYWEyOTg3MmQzYjVkYjE3LnNldENvbnRlbnQoaV9mcmFtZV8xNGUzMWMyOGVkMWU0ZmYwODNjZDNmYTZjOGM2OGRlYSk7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl9hYWMxMGJlNDYyNmY0NjJlYjVlZGM3ODg3MmQ2NGExYi5iaW5kUG9wdXAocG9wdXBfMDU1OTY3ZGZkMDAwNDgxY2JhYTI5ODcyZDNiNWRiMTcpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl9hYWMxMGJlNDYyNmY0NjJlYjVlZGM3ODg3MmQ2NGExYi5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfNWRhODgzNTc1ODg5NDYwNjg4YWNmNzA1MzIzNjMyYWQgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFszMS4yNjg2NDcsIDEyMS42MjcwNzRdLAogICAgICAgICAgICAgICAge30KICAgICAgICAgICAgKS5hZGRUbyhtYXBfNTBmYTc1YTE4N2M1NGM0ZThkM2I0ZmIyOTMxYWFkZWUpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBpY29uX2I4MGE3MTE4OWVkODQzZjRhN2E4N2YzODYyZDc1MWEzID0gTC5Bd2Vzb21lTWFya2Vycy5pY29uKAogICAgICAgICAgICAgICAgeyJleHRyYUNsYXNzZXMiOiAiZmEtcm90YXRlLTAiLCAiaWNvbiI6ICJpbmZvLXNpZ24iLCAiaWNvbkNvbG9yIjogIndoaXRlIiwgIm1hcmtlckNvbG9yIjogImJsdWUiLCAicHJlZml4IjogImdseXBoaWNvbiJ9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIG1hcmtlcl81ZGE4ODM1NzU4ODk0NjA2ODhhY2Y3MDUzMjM2MzJhZC5zZXRJY29uKGljb25fYjgwYTcxMTg5ZWQ4NDNmNGE3YTg3ZjM4NjJkNzUxYTMpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzIzMjc1NTlhYjQ4ZDRlM2Q5OTM3YTJiZTI5ZDVlN2JmID0gTC5wb3B1cCh7Im1heFdpZHRoIjogNTAwfSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaV9mcmFtZV8yYmQwODgxODU4MGE0NmNmOGY3NzVhOWNkZjlmMGUxMSA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBS0lDQWdJRHhpUGxWdWFYUmxaQ0JCZFhSdmJXOTBhWFpsSUVWc1pXTjBjbTl1YVdNZ1UzbHpkR1Z0Y3lCRGJ5NHNUSFJrTGp3dllqNEtJQ0FnSUR4d1BsTm9ZVzVuYUdGcExDQkRhR2x1WVR3dmNENEtJQ0FnSUE9PSIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzIzMjc1NTlhYjQ4ZDRlM2Q5OTM3YTJiZTI5ZDVlN2JmLnNldENvbnRlbnQoaV9mcmFtZV8yYmQwODgxODU4MGE0NmNmOGY3NzVhOWNkZjlmMGUxMSk7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl81ZGE4ODM1NzU4ODk0NjA2ODhhY2Y3MDUzMjM2MzJhZC5iaW5kUG9wdXAocG9wdXBfMjMyNzU1OWFiNDhkNGUzZDk5MzdhMmJlMjlkNWU3YmYpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl81ZGE4ODM1NzU4ODk0NjA2ODhhY2Y3MDUzMjM2MzJhZC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfOTg5ZDM2NDUwMTVhNDFiOWJiODUyZTMyMWFhNTNjYjIgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFszMS4zNDY3NjMsIDEyMS4xODU5MDhdLAogICAgICAgICAgICAgICAge30KICAgICAgICAgICAgKS5hZGRUbyhtYXBfNTBmYTc1YTE4N2M1NGM0ZThkM2I0ZmIyOTMxYWFkZWUpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBpY29uXzRlNjFmNWY3ZDEyMDQyZjFhOTU0MDM1Y2YyMGQyMWM4ID0gTC5Bd2Vzb21lTWFya2Vycy5pY29uKAogICAgICAgICAgICAgICAgeyJleHRyYUNsYXNzZXMiOiAiZmEtcm90YXRlLTAiLCAiaWNvbiI6ICJpbmZvLXNpZ24iLCAiaWNvbkNvbG9yIjogIndoaXRlIiwgIm1hcmtlckNvbG9yIjogImJsdWUiLCAicHJlZml4IjogImdseXBoaWNvbiJ9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIG1hcmtlcl85ODlkMzY0NTAxNWE0MWI5YmI4NTJlMzIxYWE1M2NiMi5zZXRJY29uKGljb25fNGU2MWY1ZjdkMTIwNDJmMWE5NTQwMzVjZjIwZDIxYzgpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2JjNzdkOTg0Zjc5ODRhZWM5NGFhOTc5NDc3YzRiMGI1ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogNTAwfSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaV9mcmFtZV82YTM3N2YwNDBjODg0ZjU2YjkyMmY0NTZiMTYyNmQxNCA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBS0lDQWdJRHhpUGtSQlNWTkRTRHd2WWo0S0lDQWdJRHh3UGxOb1lXNW5hR0ZwTENCRGFHbHVZVHd2Y0Q0S0lDQWdJQT09IiB3aWR0aD0iMzAwIiBzdHlsZT0
iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMjAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgcG9wdXBfYmM3N2Q5ODRmNzk4NGFlYzk0YWE5Nzk0NzdjNGIwYjUuc2V0Q29udGVudChpX2ZyYW1lXzZhMzc3ZjA0MGM4ODRmNTZiOTIyZjQ1NmIxNjI2ZDE0KTsKICAgICAgICAKCiAgICAgICAgbWFya2VyXzk4OWQzNjQ1MDE1YTQxYjliYjg1MmUzMjFhYTUzY2IyLmJpbmRQb3B1cChwb3B1cF9iYzc3ZDk4NGY3OTg0YWVjOTRhYTk3OTQ3N2M0YjBiNSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgbWFya2VyXzk4OWQzNjQ1MDE1YTQxYjliYjg1MmUzMjFhYTUzY2IyLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENsaWNrIG1lIQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIG1hcmtlcl9iZDlkZTZhNzM0NzA0OTJlOWJiM2Y3NmZiMDA0NWM5YiA9IEwubWFya2VyKAogICAgICAgICAgICAgICAgWzM0LjgxNTA0MSwgMTEzLjUzOTI4MV0sCiAgICAgICAgICAgICAgICB7fQogICAgICAgICAgICApLmFkZFRvKG1hcF81MGZhNzVhMTg3YzU0YzRlOGQzYjRmYjI5MzFhYWRlZSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGljb25fMWVlZjU1ZTIyMmU4NDhiNTlmN2NmYmQyMmRjOTE5OGQgPSBMLkF3ZXNvbWVNYXJrZXJzLmljb24oCiAgICAgICAgICAgICAgICB7ImV4dHJhQ2xhc3NlcyI6ICJmYS1yb3RhdGUtMCIsICJpY29uIjogImluZm8tc2lnbiIsICJpY29uQ29sb3IiOiAid2hpdGUiLCAibWFya2VyQ29sb3IiOiAiYmx1ZSIsICJwcmVmaXgiOiAiZ2x5cGhpY29uIn0KICAgICAgICAgICAgKTsKICAgICAgICAgICAgbWFya2VyX2JkOWRlNmE3MzQ3MDQ5MmU5YmIzZjc2ZmIwMDQ1YzliLnNldEljb24oaWNvbl8xZWVmNTVlMjIyZTg0OGI1OWY3Y2ZiZDIyZGM5MTk4ZCk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfODFmNGZhZWI0ZDhhNGQyZDgyNjU2ZWIyY2Q3NjE0N2UgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiA1MDB9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBpX2ZyYW1lX2NhNGYyNjA4ZDZmYzRhMWU5NDk2MmZmYWU2Mjc0NjM2ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FLSUNBZ0lEeGlQbHBvWlc1bmVtaHZkU0JWYm1sMlpYSnphWFI1UEM5aVBnb2dJQ0FnUEhBK1UyTm9iMjlzSUc5bUlGQm9lWE5wWTNNZ1lXNWtJRVZ1WjJsdVpXVnlhVzVuUEM5d1Bnb2dJQ0FnUEhBK1dtaGxibWQ2YUc5MUxDQkRhR2x1WVR3dmNENEtJQ0FnSUE9PSIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzgxZjRmYWViNGQ4YTRkMmQ4MjY1NmViMmNkNzYxNDdlLnNldENvbnRlbnQoaV9mcmFtZV9jYTRmMjYwOGQ2ZmM0YTFlOTQ5NjJmZmFlNjI3NDYzNik7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl9iZDlkZTZhNzM0NzA0OTJlOWJiM2Y3NmZiMDA0NWM5Yi5iaW5kUG9wdXAocG9wdXBfODFmNGZhZWI0ZDhhNGQyZDgyNjU2ZWIyY2Q3NjE0N2UpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl9iZDlkZTZhNzM0NzA0OTJlOWJiM2Y3NmZiMDA0NWM5Yi5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfMjQxZTkwYmZkNjIxNDkxNzlkYWVmMTMwYzY5NmI5NWMgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFszMC4yNjMyMTgsIDEyMC4xMjE2MTVdLAogICAgICAgICAgICAgICAge30KICAgICAgICAgICAgKS5hZGRUbyhtYXBfNTBmYTc1YTE4N2M1NGM0ZThkM2I0ZmIyOTMxYWFkZWUpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBpY29uXzJmMDZlM2VhODA4MjQ2NTJhZTFmMDQ0NDc5MDMxZTc2ID0gTC5Bd2Vzb21lTWFya2Vycy5pY29uKAogICAgICAgICAgICAgICAgeyJleHRyYUNsYXNzZXMiOiAiZmEtcm90YXRlLTAiLCAiaWNvbiI6ICJpbmZvLXNpZ24iLCAiaWNvbkNvbG9yIjogIndoaXRlIiwgIm1hcmtlckNvbG9yIjogImJsdWUiLCAicHJlZml4IjogImdseXBoaWNvbiJ9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIG1hcmtlcl8yNDFlOTBiZmQ2MjE0OTE3OWRhZWYxMzBjNjk2Yjk1Yy5zZXRJY29uKGljb25fMmYwNmUzZWE4MDgyNDY1MmFlMWYwNDQ0NzkwMzFlNzYpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2JhY2NjM2IzYmVhMDQyMTg5MmYzNmMxNzRiY2E1M2E4ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogNTAwfSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaV9mcmFtZV9kNTU4MDQ4MzVhMDc0MTc2YmYzZWUwNTI1MGZhMTQyMSA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBS0lDQWdJRHhpUGxwb1pXcHBZVzVuSUZWdWFYWmxjbk5wZEhrOEwySStDaUFnSUNBOGNENVRZMmh2YjJ3Z2IyWWdRV1Z5YjI1aGRYUnBZM01nWVc1a0lFRnpkSEp2Ym1GMWRHbGpjend2Y0Q0S0lDQWdJRHh3UGtoaGJtZDZhRzkxTENCRGFHbHVZVHd2Y0Q0S0lDQWdJQT09IiB3aWR0aD0iMzAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMjAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgcG9wdXBfYmFjY2MzYjNiZWEwNDIxODkyZjM2YzE3NGJjYTUzYTguc2V0Q29udGVudChpX2ZyYW1lX2Q1NTgwNDgzNWEwNzQxNzZiZjNlZTA1MjUwZmExNDIxKTsKICAgICAgICAKCiAgICAgICAgbWFya2VyXzI0MWU5MGJmZDYyMTQ5MTc5ZGFlZjEzMGM
2OTZiOTVjLmJpbmRQb3B1cChwb3B1cF9iYWNjYzNiM2JlYTA0MjE4OTJmMzZjMTc0YmNhNTNhOCkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgbWFya2VyXzI0MWU5MGJmZDYyMTQ5MTc5ZGFlZjEzMGM2OTZiOTVjLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENsaWNrIG1lIQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIG1hcmtlcl8wYjRmNGQxN2U2MDU0Mjk4OGU0NTVhMTRiOTVhNjY0MyA9IEwubWFya2VyKAogICAgICAgICAgICAgICAgWzMwLjIyNTk0OCwgMTIwLjAzOTE5NV0sCiAgICAgICAgICAgICAgICB7fQogICAgICAgICAgICApLmFkZFRvKG1hcF81MGZhNzVhMTg3YzU0YzRlOGQzYjRmYjI5MzFhYWRlZSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGljb25fNzIwNjZkYzdlYzk1NGQwNDgzNTA4YjM2Y2I0OTI4MWUgPSBMLkF3ZXNvbWVNYXJrZXJzLmljb24oCiAgICAgICAgICAgICAgICB7ImV4dHJhQ2xhc3NlcyI6ICJmYS1yb3RhdGUtMCIsICJpY29uIjogImluZm8tc2lnbiIsICJpY29uQ29sb3IiOiAid2hpdGUiLCAibWFya2VyQ29sb3IiOiAiYmx1ZSIsICJwcmVmaXgiOiAiZ2x5cGhpY29uIn0KICAgICAgICAgICAgKTsKICAgICAgICAgICAgbWFya2VyXzBiNGY0ZDE3ZTYwNTQyOTg4ZTQ1NWExNGI5NWE2NjQzLnNldEljb24oaWNvbl83MjA2NmRjN2VjOTU0ZDA0ODM1MDhiMzZjYjQ5MjgxZSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfYTY3ZThjMDdjOWY0NGMwYThhNTVkZDAwYzU5ZjhlZmMgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiA1MDB9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBpX2ZyYW1lXzNmMGE1Y2IzMzM3YjQwYzI4MTI4NmNmZGYwYzUxMjg4ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FLSUNBZ0lEeGlQbHBvWldwcFlXNW5JRlZ1YVhabGNuTnBkSGtnYjJZZ1ZHVmphRzV2Ykc5bmVUd3ZZajRLSUNBZ0lEeHdQa052Ykd4bFoyVWdiMllnVFdWamFHRnVhV05oYkNCRmJtZHBibVZsY21sdVp6d3ZjRDRLSUNBZ0lEeHdQa2hoYm1kNmFHOTFMQ0JEYUdsdVlUd3ZjRDRLSUNBZ0lBPT0iIHdpZHRoPSIzMDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIyMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICBwb3B1cF9hNjdlOGMwN2M5ZjQ0YzBhOGE1NWRkMDBjNTlmOGVmYy5zZXRDb250ZW50KGlfZnJhbWVfM2YwYTVjYjMzMzdiNDBjMjgxMjg2Y2ZkZjBjNTEyODgpOwogICAgICAgIAoKICAgICAgICBtYXJrZXJfMGI0ZjRkMTdlNjA1NDI5ODhlNDU1YTE0Yjk1YTY2NDMuYmluZFBvcHVwKHBvcHVwX2E2N2U4YzA3YzlmNDRjMGE4YTU1ZGQwMGM1OWY4ZWZjKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBtYXJrZXJfMGI0ZjRkMTdlNjA1NDI5ODhlNDU1YTE0Yjk1YTY2NDMuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2xpY2sgbWUhCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyXzU1MmQ2MzU1Mzk1ZTRjZmI5N2MyNzIyZTdiZGRjYWQzID0gTC5tYXJrZXIoCiAgICAgICAgICAgICAgICBbMzYuMDY0MzksIDE0MC4xMzYyMzFdLAogICAgICAgICAgICAgICAge30KICAgICAgICAgICAgKS5hZGRUbyhtYXBfNTBmYTc1YTE4N2M1NGM0ZThkM2I0ZmIyOTMxYWFkZWUpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBpY29uX2Y0ODc0YzUwYzFmNzRmYzBiOGMzNDRhNGZjMmUxZmM3ID0gTC5Bd2Vzb21lTWFya2Vycy5pY29uKAogICAgICAgICAgICAgICAgeyJleHRyYUNsYXNzZXMiOiAiZmEtcm90YXRlLTAiLCAiaWNvbiI6ICJpbmZvLXNpZ24iLCAiaWNvbkNvbG9yIjogIndoaXRlIiwgIm1hcmtlckNvbG9yIjogImJsdWUiLCAicHJlZml4IjogImdseXBoaWNvbiJ9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIG1hcmtlcl81NTJkNjM1NTM5NWU0Y2ZiOTdjMjcyMmU3YmRkY2FkMy5zZXRJY29uKGljb25fZjQ4NzRjNTBjMWY3NGZjMGI4YzM0NGE0ZmMyZTFmYzcpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzllZjg3OGY2YTFkYTQ3M2I5ZmFiYzI3MDQ3OTMwOGI5ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogNTAwfSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaV9mcmFtZV9kMGZhMWU0Y2UzMzI0NTIyYWNlZmI5MTFhNDg5ZGZlMCA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBS0lDQWdJRHhpUGs1aGRHbHZibUZzSUVsdWMzUnBkSFYwWlNCdlppQkJaSFpoYm1ObFpDQkpibVIxYzNSeWFXRnNJRk5qYVdWdVkyVWdZVzVrSUZSbFkyaHViMnh2WjNrOEwySStDaUFnSUNBOGNENVNaWE5sWVhKamFDQkpibk4wYVhSMWRHVWdabTl5SUVWdVpYSm5lU0JEYjI1elpYSjJZWFJwYjI0OEwzQStDaUFnSUNBOGNENUpZbUZ5WVd0cExDQktZWEJoYmp3dmNENEtJQ0FnSUE9PSIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzllZjg3OGY2YTFkYTQ3M2I5ZmFiYzI3MDQ3OTMwOGI5LnNldENvbnRlbnQoaV9mcmFtZV9kMGZhMWU0Y2UzMzI0NTIyYWNlZmI5MTFhNDg5ZGZlMCk7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl81NTJkNjM1NTM5NWU0Y2ZiOTdjMjcyMmU3YmRkY2FkMy5iaW5kUG9wdXAocG9wdXBfOWVmODc4ZjZhMWRhNDczYjlmYWJjMjcwNDc5MzA4YjkpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl81NTJkNjM1NTM5NWU0Y2ZiOTdjMjcyMmU
3YmRkY2FkMy5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfZmQ3OGU0M2U5MDhlNDM2N2IzM2YzYjY3MWY0MWJiZGEgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFszNy42NzkwMTcsIC0xMjEuNzA0NDI3XSwKICAgICAgICAgICAgICAgIHt9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzUwZmE3NWExODdjNTRjNGU4ZDNiNGZiMjkzMWFhZGVlKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgaWNvbl81YTNhZDZkYzljMDE0OWJlOGQwNTdjNTAyYzE3MTcyMiA9IEwuQXdlc29tZU1hcmtlcnMuaWNvbigKICAgICAgICAgICAgICAgIHsiZXh0cmFDbGFzc2VzIjogImZhLXJvdGF0ZS0wIiwgImljb24iOiAiaW5mby1zaWduIiwgImljb25Db2xvciI6ICJ3aGl0ZSIsICJtYXJrZXJDb2xvciI6ICJibHVlIiwgInByZWZpeCI6ICJnbHlwaGljb24ifQogICAgICAgICAgICApOwogICAgICAgICAgICBtYXJrZXJfZmQ3OGU0M2U5MDhlNDM2N2IzM2YzYjY3MWY0MWJiZGEuc2V0SWNvbihpY29uXzVhM2FkNmRjOWMwMTQ5YmU4ZDA1N2M1MDJjMTcxNzIyKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF83ZWNlYzZkZWI5MGE0OTVkYjAyZGRmYWMzMjZhZWIyOCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6IDUwMH0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGlfZnJhbWVfNWRlNjIxOTQ3NDYxNGNiOTgyMGRjMmEwNWU4Yzg1OWEgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQUtJQ0FnSUR4aVBsTmhibVJwWVNCT1lYUnBiMjVoYkNCTVlXSnZjbUYwYjNKcFpYTThMMkkrQ2lBZ0lDQThjRDVEYjIxaWRYTjBhVzl1SUZKbGMyVmhjbU5vSUVaaFkybHNhWFI1UEM5d1Bnb2dJQ0FnUEhBK1RHbDJaWEp0YjNKbExDQlZVMEU4TDNBK0NpQWdJQ0E9IiB3aWR0aD0iMzAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMjAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgcG9wdXBfN2VjZWM2ZGViOTBhNDk1ZGIwMmRkZmFjMzI2YWViMjguc2V0Q29udGVudChpX2ZyYW1lXzVkZTYyMTk0NzQ2MTRjYjk4MjBkYzJhMDVlOGM4NTlhKTsKICAgICAgICAKCiAgICAgICAgbWFya2VyX2ZkNzhlNDNlOTA4ZTQzNjdiMzNmM2I2NzFmNDFiYmRhLmJpbmRQb3B1cChwb3B1cF83ZWNlYzZkZWI5MGE0OTVkYjAyZGRmYWMzMjZhZWIyOCkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgbWFya2VyX2ZkNzhlNDNlOTA4ZTQzNjdiMzNmM2I2NzFmNDFiYmRhLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENsaWNrIG1lIQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIG1hcmtlcl9iZjY0ZTc4YzMxOWQ0NDY1YTBlOTZmMWI1YTYxYTE2YiA9IEwubWFya2VyKAogICAgICAgICAgICAgICAgWzM3LjQyNjI4LCAtMTIyLjE3MTAxNF0sCiAgICAgICAgICAgICAgICB7fQogICAgICAgICAgICApLmFkZFRvKG1hcF81MGZhNzVhMTg3YzU0YzRlOGQzYjRmYjI5MzFhYWRlZSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGljb25fOGU1N2M1ZTA4ZDc0NDI5M2JlMDNjYTdmYWZjYjQyMDggPSBMLkF3ZXNvbWVNYXJrZXJzLmljb24oCiAgICAgICAgICAgICAgICB7ImV4dHJhQ2xhc3NlcyI6ICJmYS1yb3RhdGUtMCIsICJpY29uIjogImluZm8tc2lnbiIsICJpY29uQ29sb3IiOiAid2hpdGUiLCAibWFya2VyQ29sb3IiOiAiYmx1ZSIsICJwcmVmaXgiOiAiZ2x5cGhpY29uIn0KICAgICAgICAgICAgKTsKICAgICAgICAgICAgbWFya2VyX2JmNjRlNzhjMzE5ZDQ0NjVhMGU5NmYxYjVhNjFhMTZiLnNldEljb24oaWNvbl84ZTU3YzVlMDhkNzQ0MjkzYmUwM2NhN2ZhZmNiNDIwOCk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfZGY3YmJmYWU3OTBkNGJkMDkwMTAzMmU4YTEyZTY3MGMgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiA1MDB9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBpX2ZyYW1lXzNiOTJjNzllMTZmZDRjY2E5ZTI5MTE5ZTc4YWQyMzc1ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FLSUNBZ0lEeGlQbE4wWVc1bWIzSmtJRlZ1YVhabGNuTnBkSGs4TDJJK0NpQWdJQ0E4Y0Q1RVpYQmhjblJ0Wlc1MElHOW1JRTFsWTJoaGJtbGpZV3dnUlc1bmFXNWxaWEpwYm1jOEwzQStDaUFnSUNBOGNENVRkR0Z1Wm05eVpDd2dWVk5CUEM5d1Bnb2dJQ0FnIiB3aWR0aD0iMzAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMjAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgcG9wdXBfZGY3YmJmYWU3OTBkNGJkMDkwMTAzMmU4YTEyZTY3MGMuc2V0Q29udGVudChpX2ZyYW1lXzNiOTJjNzllMTZmZDRjY2E5ZTI5MTE5ZTc4YWQyMzc1KTsKICAgICAgICAKCiAgICAgICAgbWFya2VyX2JmNjRlNzhjMzE5ZDQ0NjVhMGU5NmYxYjVhNjFhMTZiLmJpbmRQb3B1cChwb3B1cF9kZjdiYmZhZTc5MGQ0YmQwOTAxMDMyZThhMTJlNjcwYykKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgbWFya2VyX2JmNjRlNzhjMzE5ZDQ0NjVhMGU5NmYxYjVhNjFhMTZiLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENsaWNrIG1lIQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIG1hcmtlcl85ZGZhMGE1MGVhYWE0NmRhYmQ5OGIxOTA0MDcxOTU
zYSA9IEwubWFya2VyKAogICAgICAgICAgICAgICAgWzQyLjQ0Mzg2LCAtNzYuNDgyMTM3XSwKICAgICAgICAgICAgICAgIHt9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzUwZmE3NWExODdjNTRjNGU4ZDNiNGZiMjkzMWFhZGVlKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgaWNvbl8yYjAxMWMxYTA3OTI0MGUwYjA3ZWViNzVlYjcwZDFhZSA9IEwuQXdlc29tZU1hcmtlcnMuaWNvbigKICAgICAgICAgICAgICAgIHsiZXh0cmFDbGFzc2VzIjogImZhLXJvdGF0ZS0wIiwgImljb24iOiAiaW5mby1zaWduIiwgImljb25Db2xvciI6ICJ3aGl0ZSIsICJtYXJrZXJDb2xvciI6ICJibHVlIiwgInByZWZpeCI6ICJnbHlwaGljb24ifQogICAgICAgICAgICApOwogICAgICAgICAgICBtYXJrZXJfOWRmYTBhNTBlYWFhNDZkYWJkOThiMTkwNDA3MTk1M2Euc2V0SWNvbihpY29uXzJiMDExYzFhMDc5MjQwZTBiMDdlZWI3NWViNzBkMWFlKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9kMTYwOWQ3ZTRjN2E0ODAwODUwZTI2NzZiZDI1MGM5MSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6IDUwMH0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGlfZnJhbWVfMTI2YTdhN2M1ZTEyNDZlNjhiYTk4ZjI2NzU0YjFiNzIgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQUtJQ0FnSUR4aVBrTnZjbTVsYkd3Z1ZXNXBkbVZ5YzJsMGVUd3ZZajRLSUNBZ0lEeHdQbE5wWW14bGVTQlRZMmh2YjJ3Z2IyWWdUV1ZqYUdGdWFXTmhiQ0JoYm1RZ1FXVnliM053WVdObElFVnVaMmx1WldWeWFXNW5QQzl3UGdvZ0lDQWdQSEErU1hSb1lXTmhMQ0JWVTBFOEwzQStDaUFnSUNBPSIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2QxNjA5ZDdlNGM3YTQ4MDA4NTBlMjY3NmJkMjUwYzkxLnNldENvbnRlbnQoaV9mcmFtZV8xMjZhN2E3YzVlMTI0NmU2OGJhOThmMjY3NTRiMWI3Mik7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl85ZGZhMGE1MGVhYWE0NmRhYmQ5OGIxOTA0MDcxOTUzYS5iaW5kUG9wdXAocG9wdXBfZDE2MDlkN2U0YzdhNDgwMDg1MGUyNjc2YmQyNTBjOTEpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl85ZGZhMGE1MGVhYWE0NmRhYmQ5OGIxOTA0MDcxOTUzYS5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfZDhjMWQyMzYxNmJiNDZkYmJkYzliNWQzOGEwNzUxZTcgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFs1Ny42ODk4NzMsIDExLjk3NDIzXSwKICAgICAgICAgICAgICAgIHt9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzUwZmE3NWExODdjNTRjNGU4ZDNiNGZiMjkzMWFhZGVlKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgaWNvbl84NDU1NmM4NjUyYTc0ZmFhOTgxNzBiYWE3N2E2Nzk5YyA9IEwuQXdlc29tZU1hcmtlcnMuaWNvbigKICAgICAgICAgICAgICAgIHsiZXh0cmFDbGFzc2VzIjogImZhLXJvdGF0ZS0wIiwgImljb24iOiAiaW5mby1zaWduIiwgImljb25Db2xvciI6ICJ3aGl0ZSIsICJtYXJrZXJDb2xvciI6ICJibHVlIiwgInByZWZpeCI6ICJnbHlwaGljb24ifQogICAgICAgICAgICApOwogICAgICAgICAgICBtYXJrZXJfZDhjMWQyMzYxNmJiNDZkYmJkYzliNWQzOGEwNzUxZTcuc2V0SWNvbihpY29uXzg0NTU2Yzg2NTJhNzRmYWE5ODE3MGJhYTc3YTY3OTljKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8wM2NhMzdkZTE0Nzc0ZGRhYWYzODAzNDNiMTZjOTNlOSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6IDUwMH0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGlfZnJhbWVfNGNlYjM5YTk1ODA0NGVmM2E5Y2ZkZjZmN2FiOTMwZjEgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQUtJQ0FnSUR4aVBrTm9ZV3h0WlhKeklGVnVhWFpsY25OcGRIa2diMllnVkdWamFHNXZiRzluZVR3dllqNEtJQ0FnSUR4d1BrUmxjR0Z5ZEcxbGJuUWdiMllnVTNCaFkyVXNJRVZoY25Sb0lHRnVaQ0JGYm5acGNtOXViV1Z1ZEN3Z1JXNWxjbWQ1SUZSbFkyaHViMnh2WjNrdlJHVndZWEowYldWdWRDQnZaaUJOWldOb1lXNXBZM01nWVc1a0lFMWhjbWwwYVcxbElGTmphV1Z1WTJWelBDOXdQZ29nSUNBZ1BIQStSMjkwYUdWdVluVnlaeXdnVTNkbFpHVnVQQzl3UGdvZ0lDQWciIHdpZHRoPSIzMDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIyMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICBwb3B1cF8wM2NhMzdkZTE0Nzc0ZGRhYWYzODAzNDNiMTZjOTNlOS5zZXRDb250ZW50KGlfZnJhbWVfNGNlYjM5YTk1ODA0NGVmM2E5Y2ZkZjZmN2FiOTMwZjEpOwogICAgICAgIAoKICAgICAgICBtYXJrZXJfZDhjMWQyMzYxNmJiNDZkYmJkYzliNWQzOGEwNzUxZTcuYmluZFBvcHVwKHBvcHVwXzAzY2EzN2RlMTQ3NzRkZGFhZjM4MDM0M2IxNmM5M2U5KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBtYXJrZXJfZDhjMWQyMzYxNmJiNDZkYmJkYzliNWQzOGEwNzUxZTcuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2xpY2sgbWUhCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyXzhhZjk1NzkwNWY1ZjQxNTI5Yzk4NzQ0OTRiZTBhZWFkID0gTC5tYXJrZXIoCiAgICAgICAgICAgICAgICBbNTUuNzA5NDcyLCAxMy4yMTAyNDRdLAogICAgICAgICAgICAgICAge30KICAgICAgICAgICA
gKS5hZGRUbyhtYXBfNTBmYTc1YTE4N2M1NGM0ZThkM2I0ZmIyOTMxYWFkZWUpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBpY29uXzYyODY2ZTJlYzM5YjRlODY5Mzk1ZmU2YjhjMDg1NGQ2ID0gTC5Bd2Vzb21lTWFya2Vycy5pY29uKAogICAgICAgICAgICAgICAgeyJleHRyYUNsYXNzZXMiOiAiZmEtcm90YXRlLTAiLCAiaWNvbiI6ICJpbmZvLXNpZ24iLCAiaWNvbkNvbG9yIjogIndoaXRlIiwgIm1hcmtlckNvbG9yIjogImJsdWUiLCAicHJlZml4IjogImdseXBoaWNvbiJ9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIG1hcmtlcl84YWY5NTc5MDVmNWY0MTUyOWM5ODc0NDk0YmUwYWVhZC5zZXRJY29uKGljb25fNjI4NjZlMmVjMzliNGU4NjkzOTVmZTZiOGMwODU0ZDYpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2M0ODk3ZDYyYWNkNDQ0ZmJhZDc4MGY3YTQ1ZDdkNTlkID0gTC5wb3B1cCh7Im1heFdpZHRoIjogNTAwfSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaV9mcmFtZV83MjJlODY2MTE0ZGM0YWNjOGMzNGRlMTQwZTdkYmI5YSA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBS0lDQWdJRHhpUGt4MWJtUWdWVzVwZG1WeWMybDBlVHd2WWo0S0lDQWdJRHh3UGlCRVpYQmhjblJ0Wlc1MElHOW1JRVZ1WlhKbmVTQlRZMmxsYm1ObGN6d3ZjRDRLSUNBZ0lEeHdQa3gxYm1Rc0lGTjNaV1JsYmp3dmNENEtJQ0FnSUE9PSIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2M0ODk3ZDYyYWNkNDQ0ZmJhZDc4MGY3YTQ1ZDdkNTlkLnNldENvbnRlbnQoaV9mcmFtZV83MjJlODY2MTE0ZGM0YWNjOGMzNGRlMTQwZTdkYmI5YSk7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl84YWY5NTc5MDVmNWY0MTUyOWM5ODc0NDk0YmUwYWVhZC5iaW5kUG9wdXAocG9wdXBfYzQ4OTdkNjJhY2Q0NDRmYmFkNzgwZjdhNDVkN2Q1OWQpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl84YWY5NTc5MDVmNWY0MTUyOWM5ODc0NDk0YmUwYWVhZC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfMTA3YjZmNDkxNzUzNDRmMzg5NDQ0NWRkNTQ1YTY2NDcgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFs2MC40NTUzMSwgMjIuMjgwMDMxXSwKICAgICAgICAgICAgICAgIHt9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzUwZmE3NWExODdjNTRjNGU4ZDNiNGZiMjkzMWFhZGVlKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgaWNvbl8yMGQ4ZTg1ZmU3N2E0YjYwODA0OTYzOTY4OGUwZDRiYyA9IEwuQXdlc29tZU1hcmtlcnMuaWNvbigKICAgICAgICAgICAgICAgIHsiZXh0cmFDbGFzc2VzIjogImZhLXJvdGF0ZS0wIiwgImljb24iOiAiaW5mby1zaWduIiwgImljb25Db2xvciI6ICJ3aGl0ZSIsICJtYXJrZXJDb2xvciI6ICJibHVlIiwgInByZWZpeCI6ICJnbHlwaGljb24ifQogICAgICAgICAgICApOwogICAgICAgICAgICBtYXJrZXJfMTA3YjZmNDkxNzUzNDRmMzg5NDQ0NWRkNTQ1YTY2NDcuc2V0SWNvbihpY29uXzIwZDhlODVmZTc3YTRiNjA4MDQ5NjM5Njg4ZTBkNGJjKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF81MjQ1MTlmNjA0ZjU0MzJmODg3YzRlZjgzNTE4MTljMiA9IEwucG9wdXAoeyJtYXhXaWR0aCI6IDUwMH0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGlfZnJhbWVfYjU0OTA0NzY0NmJlNDFkMjhkMGUxYjdkNjI1YzJmZWMgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQUtJQ0FnSUR4aVBzT0ZZbThnUVd0aFpHVnRhU0JWYm1sMlpYSnphWFI1UEM5aVBnb2dJQ0FnUEhBK1NtOW9ZVzRnUjJGa2IyeHBiaUJRY205alpYTnpJRU5vWlcxcGMzUnllU0JEWlc1MGNtVThMM0ErQ2lBZ0lDQThjRDVVZFhKcmRTd2dSbWx1YkdGdVpEd3ZjRDRLSUNBZ0lBPT0iIHdpZHRoPSIzMDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIyMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICBwb3B1cF81MjQ1MTlmNjA0ZjU0MzJmODg3YzRlZjgzNTE4MTljMi5zZXRDb250ZW50KGlfZnJhbWVfYjU0OTA0NzY0NmJlNDFkMjhkMGUxYjdkNjI1YzJmZWMpOwogICAgICAgIAoKICAgICAgICBtYXJrZXJfMTA3YjZmNDkxNzUzNDRmMzg5NDQ0NWRkNTQ1YTY2NDcuYmluZFBvcHVwKHBvcHVwXzUyNDUxOWY2MDRmNTQzMmY4ODdjNGVmODM1MTgxOWMyKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBtYXJrZXJfMTA3YjZmNDkxNzUzNDRmMzg5NDQ0NWRkNTQ1YTY2NDcuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2xpY2sgbWUhCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyXzRlYjZiYWVmZWRkYjQyMWNiYjk3ZmNmOWNiNjYzMGVhID0gTC5tYXJrZXIoCiAgICAgICAgICAgICAgICBbNTUuNzg5MzkxLCAxMi41MjAyNjJdLAogICAgICAgICAgICAgICAge30KICAgICAgICAgICAgKS5hZGRUbyhtYXBfNTBmYTc1YTE4N2M1NGM0ZThkM2I0ZmIyOTMxYWFkZWUpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBpY29uX2UzNzVkMjBjNzIwYjQ0NTM5NTBkZTY2ZGQxY2U1OTE4ID0gTC5Bd2Vzb21lTWFya2Vycy5pY29uKAogICAgICAgICAgICAgICAgeyJleHRyYUNsYXNzZXMiOiAiZmEtcm90YXRlLTAiLCAiaWNvbiI6ICJpbmZvLXNpZ24iLCAiaWNvbkNvbG9yIjogInd
oaXRlIiwgIm1hcmtlckNvbG9yIjogImJsdWUiLCAicHJlZml4IjogImdseXBoaWNvbiJ9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIG1hcmtlcl80ZWI2YmFlZmVkZGI0MjFjYmI5N2ZjZjljYjY2MzBlYS5zZXRJY29uKGljb25fZTM3NWQyMGM3MjBiNDQ1Mzk1MGRlNjZkZDFjZTU5MTgpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2RkNmUzMDlkNTVlNzRhNWNiYTQwM2NkNjYwOGY1ZjAxID0gTC5wb3B1cCh7Im1heFdpZHRoIjogNTAwfSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaV9mcmFtZV8yN2M2MTMzNWQ1MGE0ZDQwYmE3MDAzMjBiMjEwNDI2NCA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBS0lDQWdJRHhpUGxSbFkyaHVhV05oYkNCVmJtbDJaWEp6YVhSNUlHOW1JRVJsYm0xaGNtczhMMkkrQ2lBZ0lDQThjRDVFWlhCaGNuUnRaVzUwSUc5bUlFTm9aVzFwWTJGc0lHRnVaQ0JDYVc5amFHVnRhV05oYkNCRmJtZHBibVZsY21sdVp6d3ZjRDRLSUNBZ0lEeHdQa3g1Ym1kaWVTd2dSR1Z1YldGeWF6d3ZjRDRLSUNBZ0lBPT0iIHdpZHRoPSIzMDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIyMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICBwb3B1cF9kZDZlMzA5ZDU1ZTc0YTVjYmE0MDNjZDY2MDhmNWYwMS5zZXRDb250ZW50KGlfZnJhbWVfMjdjNjEzMzVkNTBhNGQ0MGJhNzAwMzIwYjIxMDQyNjQpOwogICAgICAgIAoKICAgICAgICBtYXJrZXJfNGViNmJhZWZlZGRiNDIxY2JiOTdmY2Y5Y2I2NjMwZWEuYmluZFBvcHVwKHBvcHVwX2RkNmUzMDlkNTVlNzRhNWNiYTQwM2NkNjYwOGY1ZjAxKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBtYXJrZXJfNGViNmJhZWZlZGRiNDIxY2JiOTdmY2Y5Y2I2NjMwZWEuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2xpY2sgbWUhCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyX2U4MGRkNzVmZjQxZTQ5Mjg4YWU4MjVjOTA2NjlkNDc0ID0gTC5tYXJrZXIoCiAgICAgICAgICAgICAgICBbNjUuNjE3MDY4LCAyMi4xMzcxMThdLAogICAgICAgICAgICAgICAge30KICAgICAgICAgICAgKS5hZGRUbyhtYXBfNTBmYTc1YTE4N2M1NGM0ZThkM2I0ZmIyOTMxYWFkZWUpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBpY29uX2M5MjZlYmVjMTc5NTQ1ZTdiNTUyZGFiNWRlMzYyMzJjID0gTC5Bd2Vzb21lTWFya2Vycy5pY29uKAogICAgICAgICAgICAgICAgeyJleHRyYUNsYXNzZXMiOiAiZmEtcm90YXRlLTAiLCAiaWNvbiI6ICJpbmZvLXNpZ24iLCAiaWNvbkNvbG9yIjogIndoaXRlIiwgIm1hcmtlckNvbG9yIjogImJsdWUiLCAicHJlZml4IjogImdseXBoaWNvbiJ9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIG1hcmtlcl9lODBkZDc1ZmY0MWU0OTI4OGFlODI1YzkwNjY5ZDQ3NC5zZXRJY29uKGljb25fYzkyNmViZWMxNzk1NDVlN2I1NTJkYWI1ZGUzNjIzMmMpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzMyOTY0NTgzMjcxMDQwMmJhNjEyNjczNjM1ZGUxNGMyID0gTC5wb3B1cCh7Im1heFdpZHRoIjogNTAwfSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaV9mcmFtZV9kZjcxZDE2N2M5N2Y0MGE4YWM4OWI3ZDVkZDMyMjU0YiA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBS0lDQWdJRHhpUGt4MWJHWERwU0JWYm1sMlpYSnphWFI1SUc5bUlGUmxZMmh1YjJ4dlozazhMMkkrQ2lBZ0lDQThjRDVFWlhCaGNuUnRaVzUwSUc5bUlFVnVaMmx1WldWeWFXNW5JRk5qYVdWdVkyVnpJR0Z1WkNCTllYUm9aVzFoZEdsamN6d3ZjRDRLSUNBZ0lEeHdQa3gxYkdYRHBTd2dVM2RsWkdWdVBDOXdQZ29nSUNBZyIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzMyOTY0NTgzMjcxMDQwMmJhNjEyNjczNjM1ZGUxNGMyLnNldENvbnRlbnQoaV9mcmFtZV9kZjcxZDE2N2M5N2Y0MGE4YWM4OWI3ZDVkZDMyMjU0Yik7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl9lODBkZDc1ZmY0MWU0OTI4OGFlODI1YzkwNjY5ZDQ3NC5iaW5kUG9wdXAocG9wdXBfMzI5NjQ1ODMyNzEwNDAyYmE2MTI2NzM2MzVkZTE0YzIpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl9lODBkZDc1ZmY0MWU0OTI4OGFlODI1YzkwNjY5ZDQ3NC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfOWM5NzgyMmQwMTRmNGI5Zjk5NzE3NjIyYjBmZjhiYzIgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFs1Ny4wMTYwMDIsIDkuOTczNTM0XSwKICAgICAgICAgICAgICAgIHt9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzUwZmE3NWExODdjNTRjNGU4ZDNiNGZiMjkzMWFhZGVlKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgaWNvbl8wYjI2N2ZlNDczY2U0MGI0YjQ2OWE3MWRhMzBkZmQ1ZiA9IEwuQXdlc29tZU1hcmtlcnMuaWNvbigKICAgICAgICAgICAgICAgIHsiZXh0cmFDbGFzc2VzIjogImZhLXJvdGF0ZS0wIiwgImljb24iOiAiaW5mby1zaWduIiwgImljb25Db2xvciI6ICJ3aGl0ZSIsICJtYXJrZXJDb2xvciI6ICJibHVlIiwgInByZWZpeCI6ICJnbHlwaGljb24ifQogICAgICAgICAgICApOwogICAgICAgICAgICBtYXJrZXJfOWM5NzgyMmQwMTRmNGI5Zjk5NzE3NjIyYjBmZjhiYzIuc2V0SWNvbihpY29uXzBiMjY3ZmU0NzNjZTQwYjR
iNDY5YTcxZGEzMGRmZDVmKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9kNjlkZjlmZmM1ZmE0YmViYmIwMTY1MjI2YmE3ZmZlZiA9IEwucG9wdXAoeyJtYXhXaWR0aCI6IDUwMH0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGlfZnJhbWVfOTg0YzU1NzIyZWMzNDA0MzliZTE0NDJmMDFlNmM5MzAgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQUtJQ0FnSUR4aVBsVnVhWFpsY25OcGRIa2diMllnUVdGc1ltOXlaend2WWo0S0lDQWdJRHh3UGtSbGNHRnlkRzFsYm5RZ2IyWWdSVzVsY21kNUlGUmxZMmh1YjJ4dlozazhMM0ErQ2lBZ0lDQThjRDVCWVd4aWIzSm5MQ0JFWlc1dFlYSnJQQzl3UGdvZ0lDQWciIHdpZHRoPSIzMDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIyMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICBwb3B1cF9kNjlkZjlmZmM1ZmE0YmViYmIwMTY1MjI2YmE3ZmZlZi5zZXRDb250ZW50KGlfZnJhbWVfOTg0YzU1NzIyZWMzNDA0MzliZTE0NDJmMDFlNmM5MzApOwogICAgICAgIAoKICAgICAgICBtYXJrZXJfOWM5NzgyMmQwMTRmNGI5Zjk5NzE3NjIyYjBmZjhiYzIuYmluZFBvcHVwKHBvcHVwX2Q2OWRmOWZmYzVmYTRiZWJiYjAxNjUyMjZiYTdmZmVmKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBtYXJrZXJfOWM5NzgyMmQwMTRmNGI5Zjk5NzE3NjIyYjBmZjhiYzIuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2xpY2sgbWUhCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyXzk1ODA4NDI3NmE4NjQ1NTZiYTU1YTMyNDVlZGNkYTgzID0gTC5tYXJrZXIoCiAgICAgICAgICAgICAgICBbNDguNzg2MjA3LCA5LjE2MzM5MV0sCiAgICAgICAgICAgICAgICB7fQogICAgICAgICAgICApLmFkZFRvKG1hcF81MGZhNzVhMTg3YzU0YzRlOGQzYjRmYjI5MzFhYWRlZSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGljb25fMDU3MDAyYmE5ZTIzNGZjN2FkODM5NDhmMDk3NWY1OWYgPSBMLkF3ZXNvbWVNYXJrZXJzLmljb24oCiAgICAgICAgICAgICAgICB7ImV4dHJhQ2xhc3NlcyI6ICJmYS1yb3RhdGUtMCIsICJpY29uIjogImluZm8tc2lnbiIsICJpY29uQ29sb3IiOiAid2hpdGUiLCAibWFya2VyQ29sb3IiOiAiYmx1ZSIsICJwcmVmaXgiOiAiZ2x5cGhpY29uIn0KICAgICAgICAgICAgKTsKICAgICAgICAgICAgbWFya2VyXzk1ODA4NDI3NmE4NjQ1NTZiYTU1YTMyNDVlZGNkYTgzLnNldEljb24oaWNvbl8wNTcwMDJiYTllMjM0ZmM3YWQ4Mzk0OGYwOTc1ZjU5Zik7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfZDQwNWMwZTFlMDI1NGQzYThlMDFkMGNlZTk5Y2YzMWQgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiA1MDB9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBpX2ZyYW1lX2IwNTQ4MTcxMTA0ZTRkZDU5MGQ5ZjgzZGVlOTYwNmZhID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FLSUNBZ0lEeGlQbFZ1YVhabGNuTnBkSGtnYjJZZ1UzUjFkSFJuWVhKMFBDOWlQZ29nSUNBZ1BIQStTVzV6ZEdsMGRYUmxJR1p2Y2lCRGIyMWlkWE4wYVc5dUlGUmxZMmh1YjJ4dlozazhMM0ErQ2lBZ0lDQThjRDVUZEhWMGRHZGhjblFzSUVkbGNtMWhibms4TDNBK0NpQWdJQ0E9IiB3aWR0aD0iMzAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMjAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgcG9wdXBfZDQwNWMwZTFlMDI1NGQzYThlMDFkMGNlZTk5Y2YzMWQuc2V0Q29udGVudChpX2ZyYW1lX2IwNTQ4MTcxMTA0ZTRkZDU5MGQ5ZjgzZGVlOTYwNmZhKTsKICAgICAgICAKCiAgICAgICAgbWFya2VyXzk1ODA4NDI3NmE4NjQ1NTZiYTU1YTMyNDVlZGNkYTgzLmJpbmRQb3B1cChwb3B1cF9kNDA1YzBlMWUwMjU0ZDNhOGUwMWQwY2VlOTljZjMxZCkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgbWFya2VyXzk1ODA4NDI3NmE4NjQ1NTZiYTU1YTMyNDVlZGNkYTgzLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENsaWNrIG1lIQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIG1hcmtlcl9mOGFmNjcyYWMxY2Q0NTc4YjFlZmY0NWQwNjQ0YWU4MyA9IEwubWFya2VyKAogICAgICAgICAgICAgICAgWzU1LjY1MTMyMywgMTIuNTU3NjY1XSwKICAgICAgICAgICAgICAgIHt9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzUwZmE3NWExODdjNTRjNGU4ZDNiNGZiMjkzMWFhZGVlKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgaWNvbl83ZTU5YWY1M2E5YTg0ODllYTk0MTliNmI3MTA3ZGFiNiA9IEwuQXdlc29tZU1hcmtlcnMuaWNvbigKICAgICAgICAgICAgICAgIHsiZXh0cmFDbGFzc2VzIjogImZhLXJvdGF0ZS0wIiwgImljb24iOiAiaW5mby1zaWduIiwgImljb25Db2xvciI6ICJ3aGl0ZSIsICJtYXJrZXJDb2xvciI6ICJibHVlIiwgInByZWZpeCI6ICJnbHlwaGljb24ifQogICAgICAgICAgICApOwogICAgICAgICAgICBtYXJrZXJfZjhhZjY3MmFjMWNkNDU3OGIxZWZmNDVkMDY0NGFlODMuc2V0SWNvbihpY29uXzdlNTlhZjUzYTlhODQ4OWVhOTQxOWI2YjcxMDdkYWI2KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9hNWFkZmVjNzc2NTg0ZTIwYTJiNmUxNTkwZjcwNzBjNSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6IDUwMH0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGlfZnJhbWVfYWZhNTg1NWQ5OWNhNDI0Y2JlMmZlOGUwODJhYmJlMDQgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw
7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQUtJQ0FnSUR4aVBrMUJUaUJGYm1WeVoza2dVMjlzZFhScGIyNXpQQzlpUGdvZ0lDQWdQSEErSUVOdmNHVnVhR0ZuWlc0c0lFUmxibTFoY21zOEwzQStDaUFnSUNBPSIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2E1YWRmZWM3NzY1ODRlMjBhMmI2ZTE1OTBmNzA3MGM1LnNldENvbnRlbnQoaV9mcmFtZV9hZmE1ODU1ZDk5Y2E0MjRjYmUyZmU4ZTA4MmFiYmUwNCk7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl9mOGFmNjcyYWMxY2Q0NTc4YjFlZmY0NWQwNjQ0YWU4My5iaW5kUG9wdXAocG9wdXBfYTVhZGZlYzc3NjU4NGUyMGEyYjZlMTU5MGY3MDcwYzUpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl9mOGFmNjcyYWMxY2Q0NTc4YjFlZmY0NWQwNjQ0YWU4My5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfMzlhMmMxZWE3NWE5NGVlZDk5MDBiNWU5ZThmNzYyMDggPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFs0Ny40NzQxNTYsIDE5LjA2MDI0XSwKICAgICAgICAgICAgICAgIHt9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzUwZmE3NWExODdjNTRjNGU4ZDNiNGZiMjkzMWFhZGVlKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgaWNvbl8zN2M0ZDU0NmFkYmE0ZmQ4YTM4NTMxZmQ2ZWIwZjAwOSA9IEwuQXdlc29tZU1hcmtlcnMuaWNvbigKICAgICAgICAgICAgICAgIHsiZXh0cmFDbGFzc2VzIjogImZhLXJvdGF0ZS0wIiwgImljb24iOiAiaW5mby1zaWduIiwgImljb25Db2xvciI6ICJ3aGl0ZSIsICJtYXJrZXJDb2xvciI6ICJibHVlIiwgInByZWZpeCI6ICJnbHlwaGljb24ifQogICAgICAgICAgICApOwogICAgICAgICAgICBtYXJrZXJfMzlhMmMxZWE3NWE5NGVlZDk5MDBiNWU5ZThmNzYyMDguc2V0SWNvbihpY29uXzM3YzRkNTQ2YWRiYTRmZDhhMzg1MzFmZDZlYjBmMDA5KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9iMWIwMThhNGE0NDc0ZGIyYTBjNTE1MmIzMmUxNjJiMiA9IEwucG9wdXAoeyJtYXhXaWR0aCI6IDUwMH0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGlfZnJhbWVfNDQzNWZkMGNhMTY0NDM1ZTkyZDYwMjcxYThlOGU5YTQgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQUtJQ0FnSUR4aVBraDFibWRoY21saGJpQkJZMkZrWlcxNUlHOW1JRk5qYVdWdVkyVnpQQzlpUGdvZ0lDQWdQSEErVW1WelpXRnlZMmdnUTJWdWRISmxJR1p2Y2lCT1lYUjFjbUZzSUZOamFXVnVZMlZ6UEM5d1Bnb2dJQ0FnUEhBK1FuVmtZWEJsYzNRc0lFaDFibWRoY25rOEwzQStDaUFnSUNBPSIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2IxYjAxOGE0YTQ0NzRkYjJhMGM1MTUyYjMyZTE2MmIyLnNldENvbnRlbnQoaV9mcmFtZV80NDM1ZmQwY2ExNjQ0MzVlOTJkNjAyNzFhOGU4ZTlhNCk7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl8zOWEyYzFlYTc1YTk0ZWVkOTkwMGI1ZTllOGY3NjIwOC5iaW5kUG9wdXAocG9wdXBfYjFiMDE4YTRhNDQ3NGRiMmEwYzUxNTJiMzJlMTYyYjIpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl8zOWEyYzFlYTc1YTk0ZWVkOTkwMGI1ZTllOGY3NjIwOC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfMWU2Y2ZiYmZjOWIyNDk0MmJmZjI2MjdmMWM5OWRlY2EgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFs0OC40MTg4OTcsIC00LjQ3MjExN10sCiAgICAgICAgICAgICAgICB7fQogICAgICAgICAgICApLmFkZFRvKG1hcF81MGZhNzVhMTg3YzU0YzRlOGQzYjRmYjI5MzFhYWRlZSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGljb25fYTRmZGU5OGM3N2IzNGNlNTgyNThlZjM3ZjZhMzU1MjggPSBMLkF3ZXNvbWVNYXJrZXJzLmljb24oCiAgICAgICAgICAgICAgICB7ImV4dHJhQ2xhc3NlcyI6ICJmYS1yb3RhdGUtMCIsICJpY29uIjogImluZm8tc2lnbiIsICJpY29uQ29sb3IiOiAid2hpdGUiLCAibWFya2VyQ29sb3IiOiAiYmx1ZSIsICJwcmVmaXgiOiAiZ2x5cGhpY29uIn0KICAgICAgICAgICAgKTsKICAgICAgICAgICAgbWFya2VyXzFlNmNmYmJmYzliMjQ5NDJiZmYyNjI3ZjFjOTlkZWNhLnNldEljb24oaWNvbl9hNGZkZTk4Yzc3YjM0Y2U1ODI1OGVmMzdmNmEzNTUyOCk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfNjRiOTRiY2NmODVkNGY4MmJhMjBmYzEzYjFmYzhhMTAgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiA1MDB9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBpX2ZyYW1lXzRkYjM5YTFiODg1YzRlNGNiZmRlNWUzY2ZhZWYzYTI4ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FLSUNBZ0lEeGlQa1ZPVTFSQklFSnlaWFJoWjI1bElDaE9ZWFJwYjI1aGJDQkpibk4wYVhSMWRHVWdiMllnUVdSMllXNWpaV1FnVkdWamFHNXZiRzluYVdWeklHOW1JRUp5YVhSMFlXNTVLVHd2WWo0S0lDQWdJRHh3UGtSbGNHRnlkRzFsYm5RZ2IyWWdSVzVsY21kNUlGUmxZMmh1YjJ4dlozazhMM0ErQ2lBZ0lDQThjRDVDY21WemRDd2dSbkpoYm1ObFBDOXdQZ29nSUNBZyIgd2lkdGg9IjMwMCIgc3R5bGU
9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzY0Yjk0YmNjZjg1ZDRmODJiYTIwZmMxM2IxZmM4YTEwLnNldENvbnRlbnQoaV9mcmFtZV80ZGIzOWExYjg4NWM0ZTRjYmZkZTVlM2NmYWVmM2EyOCk7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl8xZTZjZmJiZmM5YjI0OTQyYmZmMjYyN2YxYzk5ZGVjYS5iaW5kUG9wdXAocG9wdXBfNjRiOTRiY2NmODVkNGY4MmJhMjBmYzEzYjFmYzhhMTApCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl8xZTZjZmJiZmM5YjI0OTQyYmZmMjYyN2YxYzk5ZGVjYS5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfZThhOGM5ZTE2ZDkyNGYwZmJlMmQxY2VmZjIxM2VkOGMgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFs0NS40NzgxNzgsIDkuMjI4Njk5XSwKICAgICAgICAgICAgICAgIHt9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzUwZmE3NWExODdjNTRjNGU4ZDNiNGZiMjkzMWFhZGVlKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgaWNvbl80Zjc2N2MzYWYxZDM0MWQxOTNiMDY5NjFmNjQwMDdlYyA9IEwuQXdlc29tZU1hcmtlcnMuaWNvbigKICAgICAgICAgICAgICAgIHsiZXh0cmFDbGFzc2VzIjogImZhLXJvdGF0ZS0wIiwgImljb24iOiAiaW5mby1zaWduIiwgImljb25Db2xvciI6ICJ3aGl0ZSIsICJtYXJrZXJDb2xvciI6ICJibHVlIiwgInByZWZpeCI6ICJnbHlwaGljb24ifQogICAgICAgICAgICApOwogICAgICAgICAgICBtYXJrZXJfZThhOGM5ZTE2ZDkyNGYwZmJlMmQxY2VmZjIxM2VkOGMuc2V0SWNvbihpY29uXzRmNzY3YzNhZjFkMzQxZDE5M2IwNjk2MWY2NDAwN2VjKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF84OTQxZjgwMjk1YmQ0NjFkOTliNWIzMjFjYzA1ZDFiNiA9IEwucG9wdXAoeyJtYXhXaWR0aCI6IDUwMH0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGlfZnJhbWVfODk1NGU0NjBhODExNDRkYmIyZTdkMzNhZTlmNTNkNWEgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQUtJQ0FnSUR4aVBsQnZiR2wwWldOdWFXTnZJR1JwSUUxcGJHRnViend2WWo0S0lDQWdJRHh3UGtSbGNHRnlkRzFsYm5RZ2IyWWdRMmhsYldsemRISjVMQ0JOWVhSbGNtbGhiSE1zSUdGdVpDQkRhR1Z0YVdOaGJDQkZibWRwYm1WbGNtbHVQQzl3UGdvZ0lDQWdQSEErVFdsc1lXNHNJRWwwWVd4NVBDOXdQZ29nSUNBZyIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzg5NDFmODAyOTViZDQ2MWQ5OWI1YjMyMWNjMDVkMWI2LnNldENvbnRlbnQoaV9mcmFtZV84OTU0ZTQ2MGE4MTE0NGRiYjJlN2QzM2FlOWY1M2Q1YSk7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl9lOGE4YzllMTZkOTI0ZjBmYmUyZDFjZWZmMjEzZWQ4Yy5iaW5kUG9wdXAocG9wdXBfODk0MWY4MDI5NWJkNDYxZDk5YjViMzIxY2MwNWQxYjYpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl9lOGE4YzllMTZkOTI0ZjBmYmUyZDFjZWZmMjEzZWQ4Yy5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfNzg3MDU5MzkyOTk1NDExZThhYWNiOGJmYjZiZmU4MzYgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFs1MC4wNjY4ODcsIDE5LjkxMzY0OV0sCiAgICAgICAgICAgICAgICB7fQogICAgICAgICAgICApLmFkZFRvKG1hcF81MGZhNzVhMTg3YzU0YzRlOGQzYjRmYjI5MzFhYWRlZSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGljb25fOTBlYzFiOWVlNzFhNDFkZjllMGU1ZDY5Nzc4ZDliNTMgPSBMLkF3ZXNvbWVNYXJrZXJzLmljb24oCiAgICAgICAgICAgICAgICB7ImV4dHJhQ2xhc3NlcyI6ICJmYS1yb3RhdGUtMCIsICJpY29uIjogImluZm8tc2lnbiIsICJpY29uQ29sb3IiOiAid2hpdGUiLCAibWFya2VyQ29sb3IiOiAiYmx1ZSIsICJwcmVmaXgiOiAiZ2x5cGhpY29uIn0KICAgICAgICAgICAgKTsKICAgICAgICAgICAgbWFya2VyXzc4NzA1OTM5Mjk5NTQxMWU4YWFjYjhiZmI2YmZlODM2LnNldEljb24oaWNvbl85MGVjMWI5ZWU3MWE0MWRmOWUwZTVkNjk3NzhkOWI1Myk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfYjc3NmY4NGEzMWZkNDNhMWJiNGUzNmE1MzQxZmZkNWYgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiA1MDB9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBpX2ZyYW1lXzczOWMxNTkxNDI5NjQxZWRhZjQyY2VkZmMyZjJiOWM3ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FLSUNBZ0lEeGlQa0ZIU0NCVmJtbDJaWEp6YVhSNUlHOW1JRk5qYVdWdVkyVWdZVzVrSUZSbFkyaHViMnh2WjNrOEwySStDaUFnSUNBOGNENURaVzUwWlhJZ2IyWWdSVzVsY21kNVBDOXdQZ29nSUNBZ1BIQStTM0poYThPemR5d2dVRzlzWVc1a1BDOXdQZ29nSUNBZyIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2I3NzZmODRhMzFmZDQzYTFiYjRlMzZhNTM0MWZmZDVmLnNldENvbnRlbnQoaV9mcmFtZV83MzljMTU5MTQyOTY0MWVkYWY0MmNlZGZjMmYyYjljNyk7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl83ODc
wNTkzOTI5OTU0MTFlOGFhY2I4YmZiNmJmZTgzNi5iaW5kUG9wdXAocG9wdXBfYjc3NmY4NGEzMWZkNDNhMWJiNGUzNmE1MzQxZmZkNWYpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl83ODcwNTkzOTI5OTU0MTFlOGFhY2I4YmZiNmJmZTgzNi5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfNjZjZTMzY2I3OTZmNGQzYmJiM2UxZTJlYzg5NzRkYjYgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFs1MC4yOTM1MzEsIDE4LjY4MDE5N10sCiAgICAgICAgICAgICAgICB7fQogICAgICAgICAgICApLmFkZFRvKG1hcF81MGZhNzVhMTg3YzU0YzRlOGQzYjRmYjI5MzFhYWRlZSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGljb25fODBmMDgyNjEyMDIyNGYxNTg1Y2FiZDE5MzBmYTAxNGMgPSBMLkF3ZXNvbWVNYXJrZXJzLmljb24oCiAgICAgICAgICAgICAgICB7ImV4dHJhQ2xhc3NlcyI6ICJmYS1yb3RhdGUtMCIsICJpY29uIjogImluZm8tc2lnbiIsICJpY29uQ29sb3IiOiAid2hpdGUiLCAibWFya2VyQ29sb3IiOiAiYmx1ZSIsICJwcmVmaXgiOiAiZ2x5cGhpY29uIn0KICAgICAgICAgICAgKTsKICAgICAgICAgICAgbWFya2VyXzY2Y2UzM2NiNzk2ZjRkM2JiYjNlMWUyZWM4OTc0ZGI2LnNldEljb24oaWNvbl84MGYwODI2MTIwMjI0ZjE1ODVjYWJkMTkzMGZhMDE0Yyk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfNjI0OWZkOGY0Y2I5NGY0NDg0ZTU5N2FkMTFkMGNlYTkgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiA1MDB9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBpX2ZyYW1lXzE3ZDBiMThlZjJlNjQ2NWViMDNjN2JlZjcxZDczNGM0ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FLSUNBZ0lEeGlQbE5wYkdWemFXRnVJRlZ1YVhabGNuTnBkSGtnYjJZZ1ZHVmphRzV2Ykc5bmVUd3ZZajRLSUNBZ0lEeHdQa2x1YzNScGRIVjBaU0J2WmlCVWFHVnliV0ZzSUZSbFkyaHViMnh2WjNrOEwzQStDaUFnSUNBOGNENUhiR2wzYVdObExDQlFiMnhoYm1ROEwzQStDaUFnSUNBPSIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzYyNDlmZDhmNGNiOTRmNDQ4NGU1OTdhZDExZDBjZWE5LnNldENvbnRlbnQoaV9mcmFtZV8xN2QwYjE4ZWYyZTY0NjVlYjAzYzdiZWY3MWQ3MzRjNCk7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl82NmNlMzNjYjc5NmY0ZDNiYmIzZTFlMmVjODk3NGRiNi5iaW5kUG9wdXAocG9wdXBfNjI0OWZkOGY0Y2I5NGY0NDg0ZTU5N2FkMTFkMGNlYTkpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl82NmNlMzNjYjc5NmY0ZDNiYmIzZTFlMmVjODk3NGRiNi5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfN2I1YTY4MDI2YTQxNDFiZDhiNzVhYjIzNmY4MTIwMWIgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFszOC43MzY2NDMsIC05LjEzODY1MV0sCiAgICAgICAgICAgICAgICB7fQogICAgICAgICAgICApLmFkZFRvKG1hcF81MGZhNzVhMTg3YzU0YzRlOGQzYjRmYjI5MzFhYWRlZSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGljb25fZTcwZDZhZGRkYzRlNDQ1ZTkzZTM4OGYwNzU2M2NkNTggPSBMLkF3ZXNvbWVNYXJrZXJzLmljb24oCiAgICAgICAgICAgICAgICB7ImV4dHJhQ2xhc3NlcyI6ICJmYS1yb3RhdGUtMCIsICJpY29uIjogImluZm8tc2lnbiIsICJpY29uQ29sb3IiOiAid2hpdGUiLCAibWFya2VyQ29sb3IiOiAiYmx1ZSIsICJwcmVmaXgiOiAiZ2x5cGhpY29uIn0KICAgICAgICAgICAgKTsKICAgICAgICAgICAgbWFya2VyXzdiNWE2ODAyNmE0MTQxYmQ4Yjc1YWIyMzZmODEyMDFiLnNldEljb24oaWNvbl9lNzBkNmFkZGRjNGU0NDVlOTNlMzg4ZjA3NTYzY2Q1OCk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfMzZlYjQ3YWEzMjg1NDMwMTk1ZDUxMjFmOTAwYjVkYmQgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiA1MDB9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBpX2ZyYW1lXzE5ZjNkNzY1Nzg3OTQzZDA5ZGUxYTdjNGY2MWQyMjg2ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FLSUNBZ0lEeGlQa2x1YzNScGRIVjBieUJUZFhCbGNtbHZjaUJVdzZsamJtbGpiend2WWo0S0lDQWdJRHh3UGsxbFkyaGhibWxqWVd3Z1JXNW5hVzVsWlhKcGJtY2dSR1Z3WVhKMGJXVnVkQ3c4TDNBK0NpQWdJQ0E4Y0Q1TWFYTmliMjRzSUZCdmNuUjFaMkZzUEM5d1Bnb2dJQ0FnIiB3aWR0aD0iMzAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMjAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgcG9wdXBfMzZlYjQ3YWEzMjg1NDMwMTk1ZDUxMjFmOTAwYjVkYmQuc2V0Q29udGVudChpX2ZyYW1lXzE5ZjNkNzY1Nzg3OTQzZDA5ZGUxYTdjNGY2MWQyMjg2KTsKICAgICAgICAKCiAgICAgICAgbWFya2VyXzdiNWE2ODAyNmE0MTQxYmQ4Yjc1YWIyMzZmODEyMDFiLmJpbmRQb3B1cChwb3B1cF8zNmViNDdhYTMyODU0MzAxOTVkNTEyMWY5MDBiNWRiZCkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgbWFya2VyXzdiNWE2ODAyNmE0MTQxYmQ4Yjc1YWIyMzZmODEyMDFiLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY
+CiAgICAgICAgICAgICAgICAgICAgIENsaWNrIG1lIQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIG1hcmtlcl9jMmQ1ZDY2MWEwYTE0NzZkOTBmYTVmYWU2NmU5YWM5MSA9IEwubWFya2VyKAogICAgICAgICAgICAgICAgWzUxLjc3MTMzMiwgMTQuMzA5NDU3XSwKICAgICAgICAgICAgICAgIHt9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzUwZmE3NWExODdjNTRjNGU4ZDNiNGZiMjkzMWFhZGVlKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgaWNvbl81OTdkM2NmZjVjMTY0OGQ0YTllOGJiM2I1NjkxN2I0YSA9IEwuQXdlc29tZU1hcmtlcnMuaWNvbigKICAgICAgICAgICAgICAgIHsiZXh0cmFDbGFzc2VzIjogImZhLXJvdGF0ZS0wIiwgImljb24iOiAiaW5mby1zaWduIiwgImljb25Db2xvciI6ICJ3aGl0ZSIsICJtYXJrZXJDb2xvciI6ICJibHVlIiwgInByZWZpeCI6ICJnbHlwaGljb24ifQogICAgICAgICAgICApOwogICAgICAgICAgICBtYXJrZXJfYzJkNWQ2NjFhMGExNDc2ZDkwZmE1ZmFlNjZlOWFjOTEuc2V0SWNvbihpY29uXzU5N2QzY2ZmNWMxNjQ4ZDRhOWU4YmIzYjU2OTE3YjRhKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8xYWE2M2JiNGU2MmE0NmQ1OTM0OTAzNDRiNmRlMmMzYSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6IDUwMH0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGlfZnJhbWVfNTNjYzdmYjg2MjU2NGMzNWFmNGVmOTFhMTlhOTk0YzMgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQUtJQ0FnSUR4aVBreFBSMFVnUkdWMWRITmphR3hoYm1RZ1IyMWlTRHd2WWo0S0lDQWdJRHh3UGtOdmRIUmlkWE1zUjJWeWJXRnVlVHd2Y0Q0S0lDQWdJQT09IiB3aWR0aD0iMzAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMjAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgcG9wdXBfMWFhNjNiYjRlNjJhNDZkNTkzNDkwMzQ0YjZkZTJjM2Euc2V0Q29udGVudChpX2ZyYW1lXzUzY2M3ZmI4NjI1NjRjMzVhZjRlZjkxYTE5YTk5NGMzKTsKICAgICAgICAKCiAgICAgICAgbWFya2VyX2MyZDVkNjYxYTBhMTQ3NmQ5MGZhNWZhZTY2ZTlhYzkxLmJpbmRQb3B1cChwb3B1cF8xYWE2M2JiNGU2MmE0NmQ1OTM0OTAzNDRiNmRlMmMzYSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgbWFya2VyX2MyZDVkNjYxYTBhMTQ3NmQ5MGZhNWZhZTY2ZTlhYzkxLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENsaWNrIG1lIQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCjwvc2NyaXB0Pg==&#34; style=&#34;position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;&#34; allowfullscreen webkitallowfullscreen mozallowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Peter Glarborg</title>
      <link>https://tianlicfd.github.io/authors/peter-glarborg/</link>
      <pubDate>Thu, 13 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/peter-glarborg/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Terese LÃ¸vÃ¥s</title>
      <link>https://tianlicfd.github.io/authors/terese-l%C3%B8vas/</link>
      <pubDate>Thu, 13 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/terese-l%C3%B8vas/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Ãyvind Skreiberg</title>
      <link>https://tianlicfd.github.io/authors/%C3%B8yvind-skreiberg/</link>
      <pubDate>Thu, 13 Jun 2019 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/%C3%B8yvind-skreiberg/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Liang Wang</title>
      <link>https://tianlicfd.github.io/authors/liang-wang/</link>
      <pubDate>Fri, 31 May 2019 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/liang-wang/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Mette Bugge</title>
      <link>https://tianlicfd.github.io/authors/mette-bugge/</link>
      <pubDate>Fri, 31 May 2019 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/mette-bugge/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Christoph Meraner</title>
      <link>https://tianlicfd.github.io/authors/christoph-meraner/</link>
      <pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/christoph-meraner/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Mario Ditaranto</title>
      <link>https://tianlicfd.github.io/authors/mario-ditaranto/</link>
      <pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/mario-ditaranto/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Elettra Vantaggiato</title>
      <link>https://tianlicfd.github.io/authors/elettra-vantaggiato/</link>
      <pubDate>Fri, 15 Mar 2019 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/elettra-vantaggiato/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Lihao Zhao</title>
      <link>https://tianlicfd.github.io/authors/lihao-zhao/</link>
      <pubDate>Thu, 29 Nov 2018 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/lihao-zhao/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Ning Guo</title>
      <link>https://tianlicfd.github.io/authors/ning-guo/</link>
      <pubDate>Thu, 29 Nov 2018 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/ning-guo/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Kathrin Weber</title>
      <link>https://tianlicfd.github.io/authors/kathrin-weber/</link>
      <pubDate>Fri, 10 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/kathrin-weber/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Peter Quicker</title>
      <link>https://tianlicfd.github.io/authors/peter-quicker/</link>
      <pubDate>Fri, 10 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/peter-quicker/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Sebastian Heuer</title>
      <link>https://tianlicfd.github.io/authors/sebastian-heuer/</link>
      <pubDate>Fri, 10 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/sebastian-heuer/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Viktor Scherer</title>
      <link>https://tianlicfd.github.io/authors/viktor-scherer/</link>
      <pubDate>Fri, 10 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/viktor-scherer/</guid>
      <description></description>
    </item>
    
    <item>
      <title>GÃ¡bor VÃ¡rhegyi</title>
      <link>https://tianlicfd.github.io/authors/gabor-varhegyi/</link>
      <pubDate>Tue, 12 Dec 2017 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/gabor-varhegyi/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Christopher Shaddix</title>
      <link>https://tianlicfd.github.io/authors/christopher-shaddix/</link>
      <pubDate>Fri, 25 Aug 2017 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/christopher-shaddix/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Yanqing Niu</title>
      <link>https://tianlicfd.github.io/authors/yanqing-niu/</link>
      <pubDate>Fri, 25 Aug 2017 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/yanqing-niu/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Henrik Tolvanen</title>
      <link>https://tianlicfd.github.io/authors/henrik-tolvanen/</link>
      <pubDate>Tue, 04 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/henrik-tolvanen/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Jukka Konttinen</title>
      <link>https://tianlicfd.github.io/authors/jukka-konttinen/</link>
      <pubDate>Tue, 04 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/jukka-konttinen/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Tiina Keipi</title>
      <link>https://tianlicfd.github.io/authors/tiina-keipi/</link>
      <pubDate>Tue, 04 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/tiina-keipi/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Xiaoke Ku</title>
      <link>https://tianlicfd.github.io/authors/xiaoke-ku/</link>
      <pubDate>Thu, 01 Jun 2017 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/xiaoke-ku/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Cathleen Perlman</title>
      <link>https://tianlicfd.github.io/authors/cathleen-perlman/</link>
      <pubDate>Fri, 06 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/cathleen-perlman/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Fabian Mauss</title>
      <link>https://tianlicfd.github.io/authors/fabian-mauss/</link>
      <pubDate>Fri, 06 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/fabian-mauss/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Lars Seidel</title>
      <link>https://tianlicfd.github.io/authors/lars-seidel/</link>
      <pubDate>Fri, 06 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/lars-seidel/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Michael J Antal</title>
      <link>https://tianlicfd.github.io/authors/michael-j-antal/</link>
      <pubDate>Mon, 21 Mar 2016 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/michael-j-antal/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Morten GrÃ¸nli</title>
      <link>https://tianlicfd.github.io/authors/morten-gr%C3%B8nli/</link>
      <pubDate>Mon, 21 Mar 2016 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/morten-gr%C3%B8nli/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Berta GÃ¼ell Matas</title>
      <link>https://tianlicfd.github.io/authors/berta-guell-matas/</link>
      <pubDate>Fri, 28 Aug 2015 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/berta-guell-matas/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Judit Sandquist</title>
      <link>https://tianlicfd.github.io/authors/judit-sandquist/</link>
      <pubDate>Fri, 28 Aug 2015 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/judit-sandquist/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Berta Matas GÃ¼ell</title>
      <link>https://tianlicfd.github.io/authors/berta-matas-guell/</link>
      <pubDate>Mon, 01 Jun 2015 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/berta-matas-guell/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Christopher R Shaddix</title>
      <link>https://tianlicfd.github.io/authors/christopher-r-shaddix/</link>
      <pubDate>Mon, 01 Jun 2015 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/christopher-r-shaddix/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Manfred Geier</title>
      <link>https://tianlicfd.github.io/authors/manfred-geier/</link>
      <pubDate>Mon, 08 Dec 2014 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/manfred-geier/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Andersson Helge</title>
      <link>https://tianlicfd.github.io/authors/andersson-helge/</link>
      <pubDate>Wed, 12 Sep 2012 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/andersson-helge/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Jun Deng</title>
      <link>https://tianlicfd.github.io/authors/jun-deng/</link>
      <pubDate>Sun, 01 Jan 2012 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/jun-deng/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Tangtang Bao</title>
      <link>https://tianlicfd.github.io/authors/tangtang-bao/</link>
      <pubDate>Sun, 01 Jan 2012 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/tangtang-bao/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Zhijun Wu</title>
      <link>https://tianlicfd.github.io/authors/zhijun-wu/</link>
      <pubDate>Sun, 01 Jan 2012 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/zhijun-wu/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
