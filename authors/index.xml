<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Authors | Tian Li</title>
    <link>https://tianlicfd.github.io/authors/</link>
      <atom:link href="https://tianlicfd.github.io/authors/index.xml" rel="self" type="application/rss+xml" />
    <description>Authors</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â© 2019 Tian Li</copyright><lastBuildDate>Tue, 01 Sep 2015 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://tianlicfd.github.io/img/icon-192.png</url>
      <title>Authors</title>
      <link>https://tianlicfd.github.io/authors/</link>
    </image>
    
    <item>
      <title></title>
      <link>https://tianlicfd.github.io/authors/admin/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      <guid>https://tianlicfd.github.io/authors/admin/</guid>
      <description>&lt;p&gt;Tian Li is a Associate Professor at Department of Energy and Process Engineering, Norwegian University of Science and Technology. He is a part of the &lt;a href=&#34;https://www.ntnu.edu/comkin/&#34; target=&#34;_blank&#34;&gt;ComKin Group&lt;/a&gt;, which applies modern numerical methods and experimental studies to problems arising in combustion systems, with a special emphasis on clean and sustainable energy production.&lt;/p&gt;

&lt;p&gt;Knowledge connects people. Here is a map of my selected collaborators and contacts.&lt;/p&gt;

&lt;div style=&#34;width:100%;&#34;&gt;&lt;div style=&#34;position:relative;width:100%;height:0;padding-bottom:60%;&#34;&gt;&lt;iframe src=&#34;data:text/html;charset=utf-8;base64,PCFET0NUWVBFIGh0bWw+CjxoZWFkPiAgICAKICAgIDxtZXRhIGh0dHAtZXF1aXY9ImNvbnRlbnQtdHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04IiAvPgogICAgCiAgICAgICAgPHNjcmlwdD4KICAgICAgICAgICAgTF9OT19UT1VDSCA9IGZhbHNlOwogICAgICAgICAgICBMX0RJU0FCTEVfM0QgPSBmYWxzZTsKICAgICAgICA8L3NjcmlwdD4KICAgIAogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vbGVhZmxldEAxLjUuMS9kaXN0L2xlYWZsZXQuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vY29kZS5qcXVlcnkuY29tL2pxdWVyeS0xLjEyLjQubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL21heGNkbi5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC8zLjIuMC9qcy9ib290c3RyYXAubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9MZWFmbGV0LmF3ZXNvbWUtbWFya2Vycy8yLjAuMi9sZWFmbGV0LmF3ZXNvbWUtbWFya2Vycy5qcyI+PC9zY3JpcHQ+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vbGVhZmxldEAxLjUuMS9kaXN0L2xlYWZsZXQuY3NzIi8+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vbWF4Y2RuLmJvb3RzdHJhcGNkbi5jb20vYm9vdHN0cmFwLzMuMi4wL2Nzcy9ib290c3RyYXAubWluLmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL21heGNkbi5ib290c3RyYXBjZG4uY29tL2Jvb3RzdHJhcC8zLjIuMC9jc3MvYm9vdHN0cmFwLXRoZW1lLm1pbi5jc3MiLz4KICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0iaHR0cHM6Ly9tYXhjZG4uYm9vdHN0cmFwY2RuLmNvbS9mb250LWF3ZXNvbWUvNC42LjMvY3NzL2ZvbnQtYXdlc29tZS5taW4uY3NzIi8+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL0xlYWZsZXQuYXdlc29tZS1tYXJrZXJzLzIuMC4yL2xlYWZsZXQuYXdlc29tZS1tYXJrZXJzLmNzcyIvPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL3Jhd2Nkbi5naXRoYWNrLmNvbS9weXRob24tdmlzdWFsaXphdGlvbi9mb2xpdW0vbWFzdGVyL2ZvbGl1bS90ZW1wbGF0ZXMvbGVhZmxldC5hd2Vzb21lLnJvdGF0ZS5jc3MiLz4KICAgIDxzdHlsZT5odG1sLCBib2R5IHt3aWR0aDogMTAwJTtoZWlnaHQ6IDEwMCU7bWFyZ2luOiAwO3BhZGRpbmc6IDA7fTwvc3R5bGU+CiAgICA8c3R5bGU+I21hcCB7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7Ym90dG9tOjA7cmlnaHQ6MDtsZWZ0OjA7fTwvc3R5bGU+CiAgICAKICAgICAgICAgICAgPG1ldGEgbmFtZT0idmlld3BvcnQiIGNvbnRlbnQ9IndpZHRoPWRldmljZS13aWR0aCwKICAgICAgICAgICAgICAgIGluaXRpYWwtc2NhbGU9MS4wLCBtYXhpbXVtLXNjYWxlPTEuMCwgdXNlci1zY2FsYWJsZT1ubyIgLz4KICAgICAgICAgICAgPHN0eWxlPgogICAgICAgICAgICAgICAgI21hcF81ZTUyMzcxMzlmODM0YTA0OTE3ZmM0YzYyMzExMmZjOSB7CiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAuMCU7CiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAuMCU7CiAgICAgICAgICAgICAgICAgICAgbGVmdDogMC4wJTsKICAgICAgICAgICAgICAgICAgICB0b3A6IDAuMCU7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIDwvc3R5bGU+CiAgICAgICAgCjwvaGVhZD4KPGJvZHk+ICAgIAogICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvbGl1bS1tYXAiIGlkPSJtYXBfNWU1MjM3MTM5ZjgzNGEwNDkxN2ZjNGM2MjMxMTJmYzkiID48L2Rpdj4KICAgICAgICAKPC9ib2R5Pgo8c2NyaXB0PiAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFwXzVlNTIzNzEzOWY4MzRhMDQ5MTdmYzRjNjIzMTEyZmM5ID0gTC5tYXAoCiAgICAgICAgICAgICAgICAibWFwXzVlNTIzNzEzOWY4MzRhMDQ5MTdmYzRjNjIzMTEyZmM5IiwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBjZW50ZXI6IFs2My40MTkxNDksIDEwLjQwMzk5N10sCiAgICAgICAgICAgICAgICAgICAgY3JzOiBMLkNSUy5FUFNHMzg1NywKICAgICAgICAgICAgICAgICAgICB6b29tOiAyLAogICAgICAgICAgICAgICAgICAgIHpvb21Db250cm9sOiB0cnVlLAogICAgICAgICAgICAgICAgICAgIHByZWZlckNhbnZhczogZmFsc2UsCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICk7CgogICAgICAgICAgICAKCiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIHRpbGVfbGF5ZXJfZjg5ZjAyMjg4YzBjNGY4ZmE3OGU1ZWEyZmMwNGY4ZmEgPSBMLnRpbGVMYXllcigKICAgICAgICAgICAgICAgICJodHRwczovL3tzfS50aWxlLm9wZW5zdHJlZXRtYXAub3JnL3t6fS97eH0ve3l9LnBuZyIsCiAgICAgICAgICAgICAgICB7ImF0dHJpYnV0aW9uIjogIkRhdGEgYnkgXHUwMDI2Y29weTsgXHUwMDNjYSBocmVmPVwiaHR0cDovL29wZW5zdHJlZXRtYXAub3JnXCJcdTAwM2VPcGVuU3RyZWV0TWFwXHUwMDNjL2FcdTAwM2UsIHVuZGVyIFx1MDAzY2EgaHJlZj1cImh0dHA6Ly93d3cub3BlbnN0cmVldG1hcC5vcmcvY29weXJpZ2h0XCJcdTAwM2VPRGJMXHUwMDNjL2FcdTAwM2UuIiwgImRldGVjdFJldGluYSI6IGZhbHNlLCAibWF4TmF0aXZlWm9vbSI6IDE4LCAibWF4Wm9vbSI6IDE4LCAibWluWm9vbSI6IDAsICJub1dyYXAiOiBmYWxzZSwgIm9wYWNpdHkiOiAxLCAic3ViZG9tYWlucyI6ICJhYmMiLCAidG1zIjogZmFsc2V9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzVlNTI
zNzEzOWY4MzRhMDQ5MTdmYzRjNjIzMTEyZmM5KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyX2JhMzNjYWUwM2RmYjQwODFiN2IzNzY0ZWJjNTg0MGZhID0gTC5tYXJrZXIoCiAgICAgICAgICAgICAgICBbNjMuNDE5MTQ5LCAxMC40MDM5OTddLAogICAgICAgICAgICAgICAge30KICAgICAgICAgICAgKS5hZGRUbyhtYXBfNWU1MjM3MTM5ZjgzNGEwNDkxN2ZjNGM2MjMxMTJmYzkpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBpY29uX2QxOWRkMWM0NDk4NjQ4NTdiMjRhM2VjY2U1YmRkMWY4ID0gTC5Bd2Vzb21lTWFya2Vycy5pY29uKAogICAgICAgICAgICAgICAgeyJleHRyYUNsYXNzZXMiOiAiZmEtcm90YXRlLTAiLCAiaWNvbiI6ICJpbmZvLXNpZ24iLCAiaWNvbkNvbG9yIjogIndoaXRlIiwgIm1hcmtlckNvbG9yIjogInJlZCIsICJwcmVmaXgiOiAiZ2x5cGhpY29uIn0KICAgICAgICAgICAgKTsKICAgICAgICAgICAgbWFya2VyX2JhMzNjYWUwM2RmYjQwODFiN2IzNzY0ZWJjNTg0MGZhLnNldEljb24oaWNvbl9kMTlkZDFjNDQ5ODY0ODU3YjI0YTNlY2NlNWJkZDFmOCk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfMGJhNGM5Y2JiZTQxNGQyYTg5NzQ0MTFlZjk0MjhkNjQgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiA1MDB9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBpX2ZyYW1lX2Q5MjdiZDViYWVmNjQzYmY4ODc4NWNjNWUxYjRlYzE2ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FLSUNBZ0lEeG9NejVQUmtaSlEwVThMMmd6UGdvZ0lDQWdQR0krVG05eWQyVm5hV0Z1SUZWdWFYWmxjbk5wZEhrZ2IyWWdVMk5wWlc1alpTQmhibVFnVkdWamFHNXZiRzluZVR3dllqNEtJQ0FnSUR4d1BrUmxjR0Z5ZEcxbGJuUWdiMllnUlc1bGNtZDVJR0Z1WkNCUWNtOWpaWE56SUVWdVoybHVaV1Z5YVc1blBDOXdQZ29nSUNBZ1BIQStWSEp2Ym1Sb1pXbHRMQ0JPYjNKM1lYazhMM0ErQ2lBZ0lDQT0iIHdpZHRoPSIzMDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIyMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICBwb3B1cF8wYmE0YzljYmJlNDE0ZDJhODk3NDQxMWVmOTQyOGQ2NC5zZXRDb250ZW50KGlfZnJhbWVfZDkyN2JkNWJhZWY2NDNiZjg4Nzg1Y2M1ZTFiNGVjMTYpOwogICAgICAgIAoKICAgICAgICBtYXJrZXJfYmEzM2NhZTAzZGZiNDA4MWI3YjM3NjRlYmM1ODQwZmEuYmluZFBvcHVwKHBvcHVwXzBiYTRjOWNiYmU0MTRkMmE4OTc0NDExZWY5NDI4ZDY0KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBtYXJrZXJfYmEzM2NhZTAzZGZiNDA4MWI3YjM3NjRlYmM1ODQwZmEuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2xpY2sgbWUhCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyXzkzYzBkNjQ0NWY0OTQxNWY5YjNkYzRhYTkyNTkxZmEzID0gTC5tYXJrZXIoCiAgICAgICAgICAgICAgICBbMzkuMTEwNjMyLCAxMTcuMTc3NDQ1XSwKICAgICAgICAgICAgICAgIHt9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzVlNTIzNzEzOWY4MzRhMDQ5MTdmYzRjNjIzMTEyZmM5KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgaWNvbl9jMzU2MTExMzIwMDU0NWExYTNkNDU2MWJlYTUwMjczMyA9IEwuQXdlc29tZU1hcmtlcnMuaWNvbigKICAgICAgICAgICAgICAgIHsiZXh0cmFDbGFzc2VzIjogImZhLXJvdGF0ZS0wIiwgImljb24iOiAiaW5mby1zaWduIiwgImljb25Db2xvciI6ICJ3aGl0ZSIsICJtYXJrZXJDb2xvciI6ICJibHVlIiwgInByZWZpeCI6ICJnbHlwaGljb24ifQogICAgICAgICAgICApOwogICAgICAgICAgICBtYXJrZXJfOTNjMGQ2NDQ1ZjQ5NDE1ZjliM2RjNGFhOTI1OTFmYTMuc2V0SWNvbihpY29uX2MzNTYxMTEzMjAwNTQ1YTFhM2Q0NTYxYmVhNTAyNzMzKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9lYzY0ZmViNTllYTY0NjZkOTc1NmQ2OGMyNDM0MTkzYSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6IDUwMH0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGlfZnJhbWVfYjQ5MDEzNTAzNTZiNDc2ZGFkNWU1MjdjZWY5ZWE5YzAgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQUtJQ0FnSUR4aVBsUnBZVzVxYVc0Z1ZXNXBkbVZ5YzJsMGVUd3ZZajRLSUNBZ0lEeHdQbE4wWVhSbElFdGxlU0JNWVdKdmNtRjBiM0o1SUc5bUlHVnVaMmx1WlNCamIyMWlkWE4wYVc5dVBDOXdQZ29nSUNBZ1BIQStWR2xoYm1wcGJpd2dRMmhwYm1FOEwzQStDaUFnSUNBPSIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2VjNjRmZWI1OWVhNjQ2NmQ5NzU2ZDY4YzI0MzQxOTNhLnNldENvbnRlbnQoaV9mcmFtZV9iNDkwMTM1MDM1NmI0NzZkYWQ1ZTUyN2NlZjllYTljMCk7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl85M2MwZDY0NDVmNDk0MTVmOWIzZGM0YWE5MjU5MWZhMy5iaW5kUG9wdXAocG9wdXBfZWM2NGZlYjU5ZWE2NDY2ZDk3NTZkNjhjMjQzNDE5M2EpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl85M2MwZDY0NDVmNDk0MTVmOWIzZGM0YWE5MjU5MWZhMy5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfMzBjYzY4MzlhMzlmNDJhZWE2ZGY2Y2Q3MTBhYjVlNzAgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFszMS4yODg
5NDUsIDEyMS4yMTA0OTldLAogICAgICAgICAgICAgICAge30KICAgICAgICAgICAgKS5hZGRUbyhtYXBfNWU1MjM3MTM5ZjgzNGEwNDkxN2ZjNGM2MjMxMTJmYzkpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBpY29uXzdjNjQyOGM0MTM4ZDQ0ZWE4ZjdmMmVmYTA0Y2UwMzU5ID0gTC5Bd2Vzb21lTWFya2Vycy5pY29uKAogICAgICAgICAgICAgICAgeyJleHRyYUNsYXNzZXMiOiAiZmEtcm90YXRlLTAiLCAiaWNvbiI6ICJpbmZvLXNpZ24iLCAiaWNvbkNvbG9yIjogIndoaXRlIiwgIm1hcmtlckNvbG9yIjogImJsdWUiLCAicHJlZml4IjogImdseXBoaWNvbiJ9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIG1hcmtlcl8zMGNjNjgzOWEzOWY0MmFlYTZkZjZjZDcxMGFiNWU3MC5zZXRJY29uKGljb25fN2M2NDI4YzQxMzhkNDRlYThmN2YyZWZhMDRjZTAzNTkpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzA1MzkxYzY4MjFlZjRjY2Q5M2YxNzI4NWZlZGYzOGVmID0gTC5wb3B1cCh7Im1heFdpZHRoIjogNTAwfSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaV9mcmFtZV83MDNhOTM4MDcyMDc0NTIxOWJmODI2Y2I4OTUzODllYiA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBS0lDQWdJRHhpUGxSdmJtZHFhU0JWYm1sMlpYSnphWFI1UEM5aVBnb2dJQ0FnUEhBK1UyTm9iMjlzSUc5bUlFRjFkRzl0YjNScGRtVWdVM1IxWkdsbGN6d3ZjRDRLSUNBZ0lEeHdQbE5vWVc1bmFHa3NJRU5vYVc1aFBDOXdQZ29nSUNBZyIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzA1MzkxYzY4MjFlZjRjY2Q5M2YxNzI4NWZlZGYzOGVmLnNldENvbnRlbnQoaV9mcmFtZV83MDNhOTM4MDcyMDc0NTIxOWJmODI2Y2I4OTUzODllYik7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl8zMGNjNjgzOWEzOWY0MmFlYTZkZjZjZDcxMGFiNWU3MC5iaW5kUG9wdXAocG9wdXBfMDUzOTFjNjgyMWVmNGNjZDkzZjE3Mjg1ZmVkZjM4ZWYpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl8zMGNjNjgzOWEzOWY0MmFlYTZkZjZjZDcxMGFiNWU3MC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfNGVkN2IxMDQxOTIzNDZkNTk3YWEzM2Y4ZjYwODAwYTIgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFszNC4yNDYyMTQsIDEwOC45ODc0OTZdLAogICAgICAgICAgICAgICAge30KICAgICAgICAgICAgKS5hZGRUbyhtYXBfNWU1MjM3MTM5ZjgzNGEwNDkxN2ZjNGM2MjMxMTJmYzkpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBpY29uXzEyODllYjNmOWE3YzQzZWRiZjhmZTBmMmYxZDhjN2QxID0gTC5Bd2Vzb21lTWFya2Vycy5pY29uKAogICAgICAgICAgICAgICAgeyJleHRyYUNsYXNzZXMiOiAiZmEtcm90YXRlLTAiLCAiaWNvbiI6ICJpbmZvLXNpZ24iLCAiaWNvbkNvbG9yIjogIndoaXRlIiwgIm1hcmtlckNvbG9yIjogImJsdWUiLCAicHJlZml4IjogImdseXBoaWNvbiJ9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIG1hcmtlcl80ZWQ3YjEwNDE5MjM0NmQ1OTdhYTMzZjhmNjA4MDBhMi5zZXRJY29uKGljb25fMTI4OWViM2Y5YTdjNDNlZGJmOGZlMGYyZjFkOGM3ZDEpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzY1NjM3ODBkYjIyZTQ0ZDdhMmE1Njg1NmIyN2ZmZWQzID0gTC5wb3B1cCh7Im1heFdpZHRoIjogNTAwfSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaV9mcmFtZV9mMjI3ZTU2NWYyMTM0MmYwYTY5NjZiOWMzOGZiNzQ4OSA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBS0lDQWdJRHhpUGxocEoyRnVJRXBwWVc5MGIyNW5JRlZ1YVhabGNuTnBkSGs4TDJJK0NpQWdJQ0E4Y0Q1VFkyaHZiMndnYjJZZ1JXNWxjbWQ1SUdGdVpDQlFiM2RsY2lCRmJtZHBibVZsY21sdVp6d3ZjRDRLSUNBZ0lEeHdQbGhwSjJGdUxDQkRhR2x1WVR3dmNENEtJQ0FnSUE9PSIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzY1NjM3ODBkYjIyZTQ0ZDdhMmE1Njg1NmIyN2ZmZWQzLnNldENvbnRlbnQoaV9mcmFtZV9mMjI3ZTU2NWYyMTM0MmYwYTY5NjZiOWMzOGZiNzQ4OSk7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl80ZWQ3YjEwNDE5MjM0NmQ1OTdhYTMzZjhmNjA4MDBhMi5iaW5kUG9wdXAocG9wdXBfNjU2Mzc4MGRiMjJlNDRkN2EyYTU2ODU2YjI3ZmZlZDMpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl80ZWQ3YjEwNDE5MjM0NmQ1OTdhYTMzZjhmNjA4MDBhMi5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfMTcwODc3NGNiYzhlNDliN2IxMGZlNGRlZjNiZGNjZDUgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFszOS45OTgyNzUsIDExNi4zMzMyNzhdLAogICAgICAgICAgICAgICAge30KICAgICAgICAgICAgKS5hZGRUbyhtYXBfNWU1MjM3MTM5ZjgzNGEwNDkxN2ZjNGM2MjMxMTJmYzkpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBpY29uXzQ2MWYwODVhZDg5ZDRkYzc5ODQ5ZWUwZGY0N2EwNjk4ID0gTC5Bd2Vzb21lTWFya2Vycy5pY29uKAogICAgICAgICAgICAgICAgeyJleHRyYUNsYXNzZXMiOiA
iZmEtcm90YXRlLTAiLCAiaWNvbiI6ICJpbmZvLXNpZ24iLCAiaWNvbkNvbG9yIjogIndoaXRlIiwgIm1hcmtlckNvbG9yIjogImJsdWUiLCAicHJlZml4IjogImdseXBoaWNvbiJ9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIG1hcmtlcl8xNzA4Nzc0Y2JjOGU0OWI3YjEwZmU0ZGVmM2JkY2NkNS5zZXRJY29uKGljb25fNDYxZjA4NWFkODlkNGRjNzk4NDllZTBkZjQ3YTA2OTgpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzJiYTkyZWQ1MmFmNjQ4YjQ4ZjI1YjNkMTdlMmNkMzJmID0gTC5wb3B1cCh7Im1heFdpZHRoIjogNTAwfSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaV9mcmFtZV9mNjcwMzQ4ZGVlYWM0MmExYjhlZmViNDhmNzFhNGY5MCA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBS0lDQWdJRHhpUGxSemFXNW5hSFZoSUZWdWFYWmxjbk5wZEhrOEwySStDaUFnSUNBOGNENVRZMmh2YjJ3Z2IyWWdZV1Z5YjNOd1lXTmxMMU4wWVhSbElFdGxlU0JNWVdKdmNtRjBiM0o1SUc5bUlFRjFkRzl0YjNScGRtVWdVMkZtWlhSNUlHRnVaQ0JGYm1WeVoza2dQQzl3UGdvZ0lDQWdQSEErVTJoaGJtZG9hU3dnUTJocGJtRThMM0ErQ2lBZ0lDQT0iIHdpZHRoPSIzMDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIyMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICBwb3B1cF8yYmE5MmVkNTJhZjY0OGI0OGYyNWIzZDE3ZTJjZDMyZi5zZXRDb250ZW50KGlfZnJhbWVfZjY3MDM0OGRlZWFjNDJhMWI4ZWZlYjQ4ZjcxYTRmOTApOwogICAgICAgIAoKICAgICAgICBtYXJrZXJfMTcwODc3NGNiYzhlNDliN2IxMGZlNGRlZjNiZGNjZDUuYmluZFBvcHVwKHBvcHVwXzJiYTkyZWQ1MmFmNjQ4YjQ4ZjI1YjNkMTdlMmNkMzJmKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBtYXJrZXJfMTcwODc3NGNiYzhlNDliN2IxMGZlNGRlZjNiZGNjZDUuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2xpY2sgbWUhCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyXzRlMzM3MWFhMDVhZTQzOGZhZTY4M2VhYThhNzQ4NjNlID0gTC5tYXJrZXIoCiAgICAgICAgICAgICAgICBbMzEuMjY4NjQ3LCAxMjEuNjI3MDc0XSwKICAgICAgICAgICAgICAgIHt9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzVlNTIzNzEzOWY4MzRhMDQ5MTdmYzRjNjIzMTEyZmM5KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgaWNvbl8xNjI1Zjc5ZWZiZjM0ZjViYjUyNDQ4N2EzZTlkMjdhOCA9IEwuQXdlc29tZU1hcmtlcnMuaWNvbigKICAgICAgICAgICAgICAgIHsiZXh0cmFDbGFzc2VzIjogImZhLXJvdGF0ZS0wIiwgImljb24iOiAiaW5mby1zaWduIiwgImljb25Db2xvciI6ICJ3aGl0ZSIsICJtYXJrZXJDb2xvciI6ICJibHVlIiwgInByZWZpeCI6ICJnbHlwaGljb24ifQogICAgICAgICAgICApOwogICAgICAgICAgICBtYXJrZXJfNGUzMzcxYWEwNWFlNDM4ZmFlNjgzZWFhOGE3NDg2M2Uuc2V0SWNvbihpY29uXzE2MjVmNzllZmJmMzRmNWJiNTI0NDg3YTNlOWQyN2E4KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9hMDM2NzhiMzY2NjU0OWViYmU0ZTNmZTQ2ZTdjM2MyYSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6IDUwMH0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGlfZnJhbWVfNzc3ZmQ1MjE5ZDUwNDBkOWJhMTRjMDY3Nzc3YmVlNGYgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQUtJQ0FnSUR4aVBsVnVhWFJsWkNCQmRYUnZiVzkwYVhabElFVnNaV04wY205dWFXTWdVM2x6ZEdWdGN5QkRieTRzVEhSa0xqd3ZZajRLSUNBZ0lEeHdQbE5vWVc1bmFHRnBMQ0JEYUdsdVlUd3ZjRDRLSUNBZ0lBPT0iIHdpZHRoPSIzMDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIyMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICBwb3B1cF9hMDM2NzhiMzY2NjU0OWViYmU0ZTNmZTQ2ZTdjM2MyYS5zZXRDb250ZW50KGlfZnJhbWVfNzc3ZmQ1MjE5ZDUwNDBkOWJhMTRjMDY3Nzc3YmVlNGYpOwogICAgICAgIAoKICAgICAgICBtYXJrZXJfNGUzMzcxYWEwNWFlNDM4ZmFlNjgzZWFhOGE3NDg2M2UuYmluZFBvcHVwKHBvcHVwX2EwMzY3OGIzNjY2NTQ5ZWJiZTRlM2ZlNDZlN2MzYzJhKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBtYXJrZXJfNGUzMzcxYWEwNWFlNDM4ZmFlNjgzZWFhOGE3NDg2M2UuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2xpY2sgbWUhCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyX2MyNDIxNjU3ZTI2YjRmNWQ4MmYxYzBkZTdiYzI0NzFlID0gTC5tYXJrZXIoCiAgICAgICAgICAgICAgICBbMzEuMzQ2NzYzLCAxMjEuMTg1OTA4XSwKICAgICAgICAgICAgICAgIHt9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzVlNTIzNzEzOWY4MzRhMDQ5MTdmYzRjNjIzMTEyZmM5KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgaWNvbl9mN2M0OGUyMmYyYWQ0OTk1OTUxNGJmZWE1NTAwYzNmMyA9IEwuQXdlc29tZU1hcmtlcnMuaWNvbigKICAgICAgICAgICAgICAgIHsiZXh0cmFDbGFzc2VzIjogImZhLXJvdGF0ZS0wIiwgImljb24iOiAiaW5mby1zaWduIiwgImljb25Db2xvciI6ICJ3aGl0ZSIsICJtYXJrZXJDb2xvciI6ICJibHVlIiwgInByZWZpeCI6ICJnbHlwaGljb24ifQogICAgICAgICAgICApOwogICAgICAgICAgICBtYXJrZXJfYzI0MjE2NTdlMjZiNGY1ZDgyZjFjMGRlN2JjMjQ3MWUuc2V0SWNvbihpY29uX2Y3YzQ4ZTIyZjJ
hZDQ5OTU5NTE0YmZlYTU1MDBjM2YzKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9jMGU1YjQ3ZjhhMjg0MjcwYjM5MzZlNDI1YzJmYzcxZiA9IEwucG9wdXAoeyJtYXhXaWR0aCI6IDUwMH0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGlfZnJhbWVfYmVhZTJjNDYwZDJhNDhlZjgyMjEyMDBmODQ3MDE0MmQgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQUtJQ0FnSUR4aVBrUkJTVk5EU0R3dllqNEtJQ0FnSUR4d1BsTm9ZVzVuYUdGcExDQkRhR2x1WVR3dmNENEtJQ0FnSUE9PSIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2MwZTViNDdmOGEyODQyNzBiMzkzNmU0MjVjMmZjNzFmLnNldENvbnRlbnQoaV9mcmFtZV9iZWFlMmM0NjBkMmE0OGVmODIyMTIwMGY4NDcwMTQyZCk7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl9jMjQyMTY1N2UyNmI0ZjVkODJmMWMwZGU3YmMyNDcxZS5iaW5kUG9wdXAocG9wdXBfYzBlNWI0N2Y4YTI4NDI3MGIzOTM2ZTQyNWMyZmM3MWYpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl9jMjQyMTY1N2UyNmI0ZjVkODJmMWMwZGU3YmMyNDcxZS5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfZjZhMjZlNzAwZTBhNGM0MThiNzdhNzZiNGI3MDEyYmYgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFszNC44MTUwNDEsIDExMy41MzkyODFdLAogICAgICAgICAgICAgICAge30KICAgICAgICAgICAgKS5hZGRUbyhtYXBfNWU1MjM3MTM5ZjgzNGEwNDkxN2ZjNGM2MjMxMTJmYzkpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBpY29uXzYwMGU3MWQ2YjBlNTQ4YzNhYTk1MWI5MzMwNmJhMDliID0gTC5Bd2Vzb21lTWFya2Vycy5pY29uKAogICAgICAgICAgICAgICAgeyJleHRyYUNsYXNzZXMiOiAiZmEtcm90YXRlLTAiLCAiaWNvbiI6ICJpbmZvLXNpZ24iLCAiaWNvbkNvbG9yIjogIndoaXRlIiwgIm1hcmtlckNvbG9yIjogImJsdWUiLCAicHJlZml4IjogImdseXBoaWNvbiJ9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIG1hcmtlcl9mNmEyNmU3MDBlMGE0YzQxOGI3N2E3NmI0YjcwMTJiZi5zZXRJY29uKGljb25fNjAwZTcxZDZiMGU1NDhjM2FhOTUxYjkzMzA2YmEwOWIpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2M5NmZmMDg4MWUyOTRjMjZiMDExOTRlMzE3ZjNmYmNlID0gTC5wb3B1cCh7Im1heFdpZHRoIjogNTAwfSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaV9mcmFtZV80ZjQ4MzQwYTg3ZDE0NTBiYTExMTlhZDM2YzEyZDE0NyA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBS0lDQWdJRHhpUGxwb1pXNW5lbWh2ZFNCVmJtbDJaWEp6YVhSNVBDOWlQZ29nSUNBZ1BIQStVMk5vYjI5c0lHOW1JRkJvZVhOcFkzTWdZVzVrSUVWdVoybHVaV1Z5YVc1blBDOXdQZ29nSUNBZ1BIQStXbWhsYm1kNmFHOTFMQ0JEYUdsdVlUd3ZjRDRLSUNBZ0lBPT0iIHdpZHRoPSIzMDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIyMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICBwb3B1cF9jOTZmZjA4ODFlMjk0YzI2YjAxMTk0ZTMxN2YzZmJjZS5zZXRDb250ZW50KGlfZnJhbWVfNGY0ODM0MGE4N2QxNDUwYmExMTE5YWQzNmMxMmQxNDcpOwogICAgICAgIAoKICAgICAgICBtYXJrZXJfZjZhMjZlNzAwZTBhNGM0MThiNzdhNzZiNGI3MDEyYmYuYmluZFBvcHVwKHBvcHVwX2M5NmZmMDg4MWUyOTRjMjZiMDExOTRlMzE3ZjNmYmNlKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBtYXJrZXJfZjZhMjZlNzAwZTBhNGM0MThiNzdhNzZiNGI3MDEyYmYuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2xpY2sgbWUhCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyXzg5MDQyOGQyMzY4MjRkN2NhYjE3NTJjNzNlMTVmMTg4ID0gTC5tYXJrZXIoCiAgICAgICAgICAgICAgICBbMzAuMjYzMjE4LCAxMjAuMTIxNjE1XSwKICAgICAgICAgICAgICAgIHt9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzVlNTIzNzEzOWY4MzRhMDQ5MTdmYzRjNjIzMTEyZmM5KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgaWNvbl83YjEzNWQzY2UwNmY0N2ExYjczNjI4NTNiZjMwYTJkNSA9IEwuQXdlc29tZU1hcmtlcnMuaWNvbigKICAgICAgICAgICAgICAgIHsiZXh0cmFDbGFzc2VzIjogImZhLXJvdGF0ZS0wIiwgImljb24iOiAiaW5mby1zaWduIiwgImljb25Db2xvciI6ICJ3aGl0ZSIsICJtYXJrZXJDb2xvciI6ICJibHVlIiwgInByZWZpeCI6ICJnbHlwaGljb24ifQogICAgICAgICAgICApOwogICAgICAgICAgICBtYXJrZXJfODkwNDI4ZDIzNjgyNGQ3Y2FiMTc1MmM3M2UxNWYxODguc2V0SWNvbihpY29uXzdiMTM1ZDNjZTA2ZjQ3YTFiNzM2Mjg1M2JmMzBhMmQ1KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8zNGI1ZGI2ZjkxYjI0ZTE1ODVmMmMxMjA2ZTBiNTRkNyA9IEwucG9wdXAoeyJtYXhXaWR0aCI6IDUwMH0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGlfZnJhbWVfMWEzYzhlYzAzYmU3NDQ5NTllNWNlODM1MDhlNzM4MjYgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQUtJQ0FnSUR4aVBscG9aV3BwWVc1bklGVnVhWFpsY25OcGRIazhMMkkrQ2lBZ0l
DQThjRDVUWTJodmIyd2diMllnUVdWeWIyNWhkWFJwWTNNZ1lXNWtJRUZ6ZEhKdmJtRjFkR2xqY3p3dmNENEtJQ0FnSUR4d1BraGhibWQ2YUc5MUxDQkRhR2x1WVR3dmNENEtJQ0FnSUE9PSIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzM0YjVkYjZmOTFiMjRlMTU4NWYyYzEyMDZlMGI1NGQ3LnNldENvbnRlbnQoaV9mcmFtZV8xYTNjOGVjMDNiZTc0NDk1OWU1Y2U4MzUwOGU3MzgyNik7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl84OTA0MjhkMjM2ODI0ZDdjYWIxNzUyYzczZTE1ZjE4OC5iaW5kUG9wdXAocG9wdXBfMzRiNWRiNmY5MWIyNGUxNTg1ZjJjMTIwNmUwYjU0ZDcpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl84OTA0MjhkMjM2ODI0ZDdjYWIxNzUyYzczZTE1ZjE4OC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfNDI4NWY0ZTBlNmNkNGUxYmIzYzM4OGUyYTljZWY0NmMgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFszMC4yMjU5NDgsIDEyMC4wMzkxOTVdLAogICAgICAgICAgICAgICAge30KICAgICAgICAgICAgKS5hZGRUbyhtYXBfNWU1MjM3MTM5ZjgzNGEwNDkxN2ZjNGM2MjMxMTJmYzkpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBpY29uXzU0YTc0MTZlYTdjNTQ1ZTFiOTM0ZWJkYmMyYmIzNmJjID0gTC5Bd2Vzb21lTWFya2Vycy5pY29uKAogICAgICAgICAgICAgICAgeyJleHRyYUNsYXNzZXMiOiAiZmEtcm90YXRlLTAiLCAiaWNvbiI6ICJpbmZvLXNpZ24iLCAiaWNvbkNvbG9yIjogIndoaXRlIiwgIm1hcmtlckNvbG9yIjogImJsdWUiLCAicHJlZml4IjogImdseXBoaWNvbiJ9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIG1hcmtlcl80Mjg1ZjRlMGU2Y2Q0ZTFiYjNjMzg4ZTJhOWNlZjQ2Yy5zZXRJY29uKGljb25fNTRhNzQxNmVhN2M1NDVlMWI5MzRlYmRiYzJiYjM2YmMpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzQ4ODFhNTg3MWJlNTQyZGVhNGU3ZjI0MWI5OGM1YjdiID0gTC5wb3B1cCh7Im1heFdpZHRoIjogNTAwfSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaV9mcmFtZV9jMmJjOTkxMTFiNTY0Nzc3OTNkZGViOWExYTA3NDhkMCA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBS0lDQWdJRHhpUGxwb1pXcHBZVzVuSUZWdWFYWmxjbk5wZEhrZ2IyWWdWR1ZqYUc1dmJHOW5lVHd2WWo0S0lDQWdJRHh3UGtOdmJHeGxaMlVnYjJZZ1RXVmphR0Z1YVdOaGJDQkZibWRwYm1WbGNtbHVaend2Y0Q0S0lDQWdJRHh3UGtoaGJtZDZhRzkxTENCRGFHbHVZVHd2Y0Q0S0lDQWdJQT09IiB3aWR0aD0iMzAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMjAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgcG9wdXBfNDg4MWE1ODcxYmU1NDJkZWE0ZTdmMjQxYjk4YzViN2Iuc2V0Q29udGVudChpX2ZyYW1lX2MyYmM5OTExMWI1NjQ3Nzc5M2RkZWI5YTFhMDc0OGQwKTsKICAgICAgICAKCiAgICAgICAgbWFya2VyXzQyODVmNGUwZTZjZDRlMWJiM2MzODhlMmE5Y2VmNDZjLmJpbmRQb3B1cChwb3B1cF80ODgxYTU4NzFiZTU0MmRlYTRlN2YyNDFiOThjNWI3YikKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgbWFya2VyXzQyODVmNGUwZTZjZDRlMWJiM2MzODhlMmE5Y2VmNDZjLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENsaWNrIG1lIQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIG1hcmtlcl9mNGNlZjdjNDFhMDU0YzRiYjFhYzRjNDkwYzQ0NTVlOSA9IEwubWFya2VyKAogICAgICAgICAgICAgICAgWzM2LjA2NDM5LCAxNDAuMTM2MjMxXSwKICAgICAgICAgICAgICAgIHt9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzVlNTIzNzEzOWY4MzRhMDQ5MTdmYzRjNjIzMTEyZmM5KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgaWNvbl85NDA5NjViZGJkZTY0YWRhYTZiNzU5NTA3YTE1ZDA5MCA9IEwuQXdlc29tZU1hcmtlcnMuaWNvbigKICAgICAgICAgICAgICAgIHsiZXh0cmFDbGFzc2VzIjogImZhLXJvdGF0ZS0wIiwgImljb24iOiAiaW5mby1zaWduIiwgImljb25Db2xvciI6ICJ3aGl0ZSIsICJtYXJrZXJDb2xvciI6ICJibHVlIiwgInByZWZpeCI6ICJnbHlwaGljb24ifQogICAgICAgICAgICApOwogICAgICAgICAgICBtYXJrZXJfZjRjZWY3YzQxYTA1NGM0YmIxYWM0YzQ5MGM0NDU1ZTkuc2V0SWNvbihpY29uXzk0MDk2NWJkYmRlNjRhZGFhNmI3NTk1MDdhMTVkMDkwKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF8wNzM4Y2NiNjkxNzc0ODMxYjUyNWM0MDY5MTNkOTNhNSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6IDUwMH0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGlfZnJhbWVfMTRkMWI4OTU0ODc5NDE0OWExYTA2YjE0ODE2Nzg5OWEgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQUtJQ0FnSUR4aVBrNWhkR2x2Ym1Gc0lFbHVjM1JwZEhWMFpTQnZaaUJCWkhaaGJtTmxaQ0JKYm1SMWMzUnlhV0ZzSUZOamFXVnVZMlVnWVc1a0lGUmxZMmh1YjJ4dlozazhMMkkrQ2lBZ0lDQThjRDVTWlhObFlYSmphQ0JKYm5OMGFYUjFkR1VnWm05eUlFVnVaWEpuZVNCRGIyNXpaWEoyWVhScGIyNDhMM0ErQ2lBZ0lDQThjRDVKWW1GeVlXdHBMQ0JLWVhCaGJqd3ZjRDRLSUNBZ0lBPT0iIHdpZHRoPSIzMDAiIHN0eWxlPSJib3J
kZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIyMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICBwb3B1cF8wNzM4Y2NiNjkxNzc0ODMxYjUyNWM0MDY5MTNkOTNhNS5zZXRDb250ZW50KGlfZnJhbWVfMTRkMWI4OTU0ODc5NDE0OWExYTA2YjE0ODE2Nzg5OWEpOwogICAgICAgIAoKICAgICAgICBtYXJrZXJfZjRjZWY3YzQxYTA1NGM0YmIxYWM0YzQ5MGM0NDU1ZTkuYmluZFBvcHVwKHBvcHVwXzA3MzhjY2I2OTE3NzQ4MzFiNTI1YzQwNjkxM2Q5M2E1KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBtYXJrZXJfZjRjZWY3YzQxYTA1NGM0YmIxYWM0YzQ5MGM0NDU1ZTkuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2xpY2sgbWUhCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyXzgyZTA4N2U5MjhkNDRiZWZiNzQyYzM2OGM0YWNkMzc2ID0gTC5tYXJrZXIoCiAgICAgICAgICAgICAgICBbMzcuNjc5MDE3LCAtMTIxLjcwNDQyN10sCiAgICAgICAgICAgICAgICB7fQogICAgICAgICAgICApLmFkZFRvKG1hcF81ZTUyMzcxMzlmODM0YTA0OTE3ZmM0YzYyMzExMmZjOSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGljb25fMWE1MTE5NmJhZWQwNGNiM2I2OWJjOWM5NzUyZmFkYmYgPSBMLkF3ZXNvbWVNYXJrZXJzLmljb24oCiAgICAgICAgICAgICAgICB7ImV4dHJhQ2xhc3NlcyI6ICJmYS1yb3RhdGUtMCIsICJpY29uIjogImluZm8tc2lnbiIsICJpY29uQ29sb3IiOiAid2hpdGUiLCAibWFya2VyQ29sb3IiOiAiYmx1ZSIsICJwcmVmaXgiOiAiZ2x5cGhpY29uIn0KICAgICAgICAgICAgKTsKICAgICAgICAgICAgbWFya2VyXzgyZTA4N2U5MjhkNDRiZWZiNzQyYzM2OGM0YWNkMzc2LnNldEljb24oaWNvbl8xYTUxMTk2YmFlZDA0Y2IzYjY5YmM5Yzk3NTJmYWRiZik7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfNGJkNzBjYzMzNjUwNGU2MWE0MTMwY2FjMGVkNTU1MjIgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiA1MDB9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBpX2ZyYW1lXzllYzhkZDA2NjE0YzRlMmNhZjA4ZDQ4NGZlMDIxZWRiID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FLSUNBZ0lEeGlQbE5oYm1ScFlTQk9ZWFJwYjI1aGJDQk1ZV0p2Y21GMGIzSnBaWE04TDJJK0NpQWdJQ0E4Y0Q1RGIyMWlkWE4wYVc5dUlGSmxjMlZoY21Ob0lFWmhZMmxzYVhSNVBDOXdQZ29nSUNBZ1BIQStUR2wyWlhKdGIzSmxMQ0JWVTBFOEwzQStDaUFnSUNBPSIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzRiZDcwY2MzMzY1MDRlNjFhNDEzMGNhYzBlZDU1NTIyLnNldENvbnRlbnQoaV9mcmFtZV85ZWM4ZGQwNjYxNGM0ZTJjYWYwOGQ0ODRmZTAyMWVkYik7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl84MmUwODdlOTI4ZDQ0YmVmYjc0MmMzNjhjNGFjZDM3Ni5iaW5kUG9wdXAocG9wdXBfNGJkNzBjYzMzNjUwNGU2MWE0MTMwY2FjMGVkNTU1MjIpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl84MmUwODdlOTI4ZDQ0YmVmYjc0MmMzNjhjNGFjZDM3Ni5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfNzEwYjY5ZDg4OGNiNDNmMWIxMTllMDhlODVkMDc3ZjMgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFszNy40MjYyOCwgLTEyMi4xNzEwMTRdLAogICAgICAgICAgICAgICAge30KICAgICAgICAgICAgKS5hZGRUbyhtYXBfNWU1MjM3MTM5ZjgzNGEwNDkxN2ZjNGM2MjMxMTJmYzkpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBpY29uXzYyNjRmN2I0YzMwMjQ1OWQ4MDJiNjlmNTZjYWNlMTNiID0gTC5Bd2Vzb21lTWFya2Vycy5pY29uKAogICAgICAgICAgICAgICAgeyJleHRyYUNsYXNzZXMiOiAiZmEtcm90YXRlLTAiLCAiaWNvbiI6ICJpbmZvLXNpZ24iLCAiaWNvbkNvbG9yIjogIndoaXRlIiwgIm1hcmtlckNvbG9yIjogImJsdWUiLCAicHJlZml4IjogImdseXBoaWNvbiJ9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIG1hcmtlcl83MTBiNjlkODg4Y2I0M2YxYjExOWUwOGU4NWQwNzdmMy5zZXRJY29uKGljb25fNjI2NGY3YjRjMzAyNDU5ZDgwMmI2OWY1NmNhY2UxM2IpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzY4YWM4MDdhM2M2ZTQ1OWQ5YjAwN2ZiYWM4NGU3N2U1ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogNTAwfSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaV9mcmFtZV8yYzlhNjdkZjBlMzQ0ZTc2OWIxNzc3ZTVhOGQyY2ExMCA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBS0lDQWdJRHhpUGxOMFlXNW1iM0prSUZWdWFYWmxjbk5wZEhrOEwySStDaUFnSUNBOGNENUVaWEJoY25SdFpXNTBJRzltSUUxbFkyaGhibWxqWVd3Z1JXNW5hVzVsWlhKcGJtYzhMM0ErQ2lBZ0lDQThjRDVUZEdGdVptOXlaQ3dnVlZOQlBDOXdQZ29nSUNBZyIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzY4YWM4MDdhM2M2ZTQ1OWQ5YjAwN2ZiYWM4NGU3N2U1LnNldENvbnRlbnQoaV9mcmFtZV8yYzlhNjdkZjBlMzQ0ZTc2OWIxNzc3ZTVhOGQyY2ExMCk7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl83MTBiNjlkODg4Y2I0M2YxYjExOWUwOGU4NWQwNzdmMy5iaW5
kUG9wdXAocG9wdXBfNjhhYzgwN2EzYzZlNDU5ZDliMDA3ZmJhYzg0ZTc3ZTUpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl83MTBiNjlkODg4Y2I0M2YxYjExOWUwOGU4NWQwNzdmMy5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfZmU1NjlkNDdhOWM2NGFkZjlkOTY4NTgzODZmMzdmODYgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFs0Mi40NDM4NiwgLTc2LjQ4MjEzN10sCiAgICAgICAgICAgICAgICB7fQogICAgICAgICAgICApLmFkZFRvKG1hcF81ZTUyMzcxMzlmODM0YTA0OTE3ZmM0YzYyMzExMmZjOSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGljb25fZmY5MTM3ZTQ5NGJhNDdjMWIwMzkzMWQ0NDUyMWJlYzcgPSBMLkF3ZXNvbWVNYXJrZXJzLmljb24oCiAgICAgICAgICAgICAgICB7ImV4dHJhQ2xhc3NlcyI6ICJmYS1yb3RhdGUtMCIsICJpY29uIjogImluZm8tc2lnbiIsICJpY29uQ29sb3IiOiAid2hpdGUiLCAibWFya2VyQ29sb3IiOiAiYmx1ZSIsICJwcmVmaXgiOiAiZ2x5cGhpY29uIn0KICAgICAgICAgICAgKTsKICAgICAgICAgICAgbWFya2VyX2ZlNTY5ZDQ3YTljNjRhZGY5ZDk2ODU4Mzg2ZjM3Zjg2LnNldEljb24oaWNvbl9mZjkxMzdlNDk0YmE0N2MxYjAzOTMxZDQ0NTIxYmVjNyk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfYTY3NjkwZTYzMTA3NDFkNWE0Y2YwZTI5N2M5YzBhNzAgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiA1MDB9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBpX2ZyYW1lXzkzOTMwNTJiNDgxMzQ5NmM5NTZlZGRmZDU3NzI5NTBhID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FLSUNBZ0lEeGlQa052Y201bGJHd2dWVzVwZG1WeWMybDBlVHd2WWo0S0lDQWdJRHh3UGxOcFlteGxlU0JUWTJodmIyd2diMllnVFdWamFHRnVhV05oYkNCaGJtUWdRV1Z5YjNOd1lXTmxJRVZ1WjJsdVpXVnlhVzVuUEM5d1Bnb2dJQ0FnUEhBK1NYUm9ZV05oTENCVlUwRThMM0ErQ2lBZ0lDQT0iIHdpZHRoPSIzMDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIyMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICBwb3B1cF9hNjc2OTBlNjMxMDc0MWQ1YTRjZjBlMjk3YzljMGE3MC5zZXRDb250ZW50KGlfZnJhbWVfOTM5MzA1MmI0ODEzNDk2Yzk1NmVkZGZkNTc3Mjk1MGEpOwogICAgICAgIAoKICAgICAgICBtYXJrZXJfZmU1NjlkNDdhOWM2NGFkZjlkOTY4NTgzODZmMzdmODYuYmluZFBvcHVwKHBvcHVwX2E2NzY5MGU2MzEwNzQxZDVhNGNmMGUyOTdjOWMwYTcwKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBtYXJrZXJfZmU1NjlkNDdhOWM2NGFkZjlkOTY4NTgzODZmMzdmODYuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2xpY2sgbWUhCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyXzY3MTMxMmNkNzFjZjRiOTliZjRlNzZjMGZmMTdmN2VjID0gTC5tYXJrZXIoCiAgICAgICAgICAgICAgICBbNTcuNjg5ODczLCAxMS45NzQyM10sCiAgICAgICAgICAgICAgICB7fQogICAgICAgICAgICApLmFkZFRvKG1hcF81ZTUyMzcxMzlmODM0YTA0OTE3ZmM0YzYyMzExMmZjOSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGljb25fZDcxZmVlODBhODc3NGQ2NmExZDM2YzY2ZTE2ZjAwN2EgPSBMLkF3ZXNvbWVNYXJrZXJzLmljb24oCiAgICAgICAgICAgICAgICB7ImV4dHJhQ2xhc3NlcyI6ICJmYS1yb3RhdGUtMCIsICJpY29uIjogImluZm8tc2lnbiIsICJpY29uQ29sb3IiOiAid2hpdGUiLCAibWFya2VyQ29sb3IiOiAiYmx1ZSIsICJwcmVmaXgiOiAiZ2x5cGhpY29uIn0KICAgICAgICAgICAgKTsKICAgICAgICAgICAgbWFya2VyXzY3MTMxMmNkNzFjZjRiOTliZjRlNzZjMGZmMTdmN2VjLnNldEljb24oaWNvbl9kNzFmZWU4MGE4Nzc0ZDY2YTFkMzZjNjZlMTZmMDA3YSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfMTUwYjc1ZGYwZGFlNDRhMzljYzkwZjIxYjc3NjI1ODIgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiA1MDB9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBpX2ZyYW1lXzMyYjcyNWRjMTlhNjQwYTFiNDE0M2NiY2I0MWQ4YzM1ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FLSUNBZ0lEeGlQa05vWVd4dFpYSnpJRlZ1YVhabGNuTnBkSGtnYjJZZ1ZHVmphRzV2Ykc5bmVUd3ZZajRLSUNBZ0lEeHdQa1JsY0dGeWRHMWxiblFnYjJZZ1UzQmhZMlVzSUVWaGNuUm9JR0Z1WkNCRmJuWnBjbTl1YldWdWRDd2dSVzVsY21kNUlGUmxZMmh1YjJ4dloza3ZSR1Z3WVhKMGJXVnVkQ0J2WmlCTlpXTm9ZVzVwWTNNZ1lXNWtJRTFoY21sMGFXMWxJRk5qYVdWdVkyVnpQQzl3UGdvZ0lDQWdQSEErUjI5MGFHVnVZblZ5Wnl3Z1UzZGxaR1Z1UEM5d1Bnb2dJQ0FnIiB3aWR0aD0iMzAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMjAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgcG9wdXBfMTUwYjc1ZGYwZGFlNDRhMzljYzkwZjIxYjc3NjI1ODIuc2V0Q29udGVudChpX2ZyYW1lXzMyYjcyNWRjMTlhNjQwYTFiNDE0M2NiY2I0MWQ4YzM1KTsKICAgICAgICAKCiAgICAgICAgbWFya2VyXzY3MTMxMmNkNzFjZjRiOTliZjRlNzZjMGZmMTdmN2VjLmJpbmRQb3B1cChwb3B1cF8xNTBiNzVkZjBkYWU0NGEzOWNjOTBmMjFiNzc2MjU4MikKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICA
gICAgbWFya2VyXzY3MTMxMmNkNzFjZjRiOTliZjRlNzZjMGZmMTdmN2VjLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENsaWNrIG1lIQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIG1hcmtlcl9hMzQxMmI5OTkzOTg0ZDFiODNmNTZhOWMxYjNlOTRjYSA9IEwubWFya2VyKAogICAgICAgICAgICAgICAgWzU1LjcwOTQ3MiwgMTMuMjEwMjQ0XSwKICAgICAgICAgICAgICAgIHt9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzVlNTIzNzEzOWY4MzRhMDQ5MTdmYzRjNjIzMTEyZmM5KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgaWNvbl8xN2RhYTM4ZGE1MWE0YmY5OTQxMzAwMjI5ZjJjODBkZCA9IEwuQXdlc29tZU1hcmtlcnMuaWNvbigKICAgICAgICAgICAgICAgIHsiZXh0cmFDbGFzc2VzIjogImZhLXJvdGF0ZS0wIiwgImljb24iOiAiaW5mby1zaWduIiwgImljb25Db2xvciI6ICJ3aGl0ZSIsICJtYXJrZXJDb2xvciI6ICJibHVlIiwgInByZWZpeCI6ICJnbHlwaGljb24ifQogICAgICAgICAgICApOwogICAgICAgICAgICBtYXJrZXJfYTM0MTJiOTk5Mzk4NGQxYjgzZjU2YTljMWIzZTk0Y2Euc2V0SWNvbihpY29uXzE3ZGFhMzhkYTUxYTRiZjk5NDEzMDAyMjlmMmM4MGRkKTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9lNjUxMTgzODI0OGI0MWYyOTI0NGNlZDEyYTU3ODIyOCA9IEwucG9wdXAoeyJtYXhXaWR0aCI6IDUwMH0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGlfZnJhbWVfY2Y2YTc4YTkyZTJiNGJkNjhkMTJhM2E1ZjhkYTVmYWQgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQUtJQ0FnSUR4aVBreDFibVFnVlc1cGRtVnljMmwwZVR3dllqNEtJQ0FnSUR4d1BpQkVaWEJoY25SdFpXNTBJRzltSUVWdVpYSm5lU0JUWTJsbGJtTmxjend2Y0Q0S0lDQWdJRHh3UGt4MWJtUXNJRk4zWldSbGJqd3ZjRDRLSUNBZ0lBPT0iIHdpZHRoPSIzMDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIyMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICBwb3B1cF9lNjUxMTgzODI0OGI0MWYyOTI0NGNlZDEyYTU3ODIyOC5zZXRDb250ZW50KGlfZnJhbWVfY2Y2YTc4YTkyZTJiNGJkNjhkMTJhM2E1ZjhkYTVmYWQpOwogICAgICAgIAoKICAgICAgICBtYXJrZXJfYTM0MTJiOTk5Mzk4NGQxYjgzZjU2YTljMWIzZTk0Y2EuYmluZFBvcHVwKHBvcHVwX2U2NTExODM4MjQ4YjQxZjI5MjQ0Y2VkMTJhNTc4MjI4KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBtYXJrZXJfYTM0MTJiOTk5Mzk4NGQxYjgzZjU2YTljMWIzZTk0Y2EuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2xpY2sgbWUhCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyX2RkODA2YjQ5MjJhZTQ5NmU4ZGZjYjgwNGMzNGRmZGVlID0gTC5tYXJrZXIoCiAgICAgICAgICAgICAgICBbNjAuNDU1MzEsIDIyLjI4MDAzMV0sCiAgICAgICAgICAgICAgICB7fQogICAgICAgICAgICApLmFkZFRvKG1hcF81ZTUyMzcxMzlmODM0YTA0OTE3ZmM0YzYyMzExMmZjOSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGljb25fNzY4MDZkYzhmYTcyNGVlY2FjOTlhYWJhMjhiOTA1MDEgPSBMLkF3ZXNvbWVNYXJrZXJzLmljb24oCiAgICAgICAgICAgICAgICB7ImV4dHJhQ2xhc3NlcyI6ICJmYS1yb3RhdGUtMCIsICJpY29uIjogImluZm8tc2lnbiIsICJpY29uQ29sb3IiOiAid2hpdGUiLCAibWFya2VyQ29sb3IiOiAiYmx1ZSIsICJwcmVmaXgiOiAiZ2x5cGhpY29uIn0KICAgICAgICAgICAgKTsKICAgICAgICAgICAgbWFya2VyX2RkODA2YjQ5MjJhZTQ5NmU4ZGZjYjgwNGMzNGRmZGVlLnNldEljb24oaWNvbl83NjgwNmRjOGZhNzI0ZWVjYWM5OWFhYmEyOGI5MDUwMSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfOWE4ZjkwMjdhMDA2NDU2ZDhmZGM0NjE3YmZlM2E4ZTEgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiA1MDB9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBpX2ZyYW1lX2UxYjhmYWM0OTQ3ODQ2NGZhMGI1MWZlYjMxMTBlNzhkID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FLSUNBZ0lEeGlQc09GWW04Z1FXdGhaR1Z0YVNCVmJtbDJaWEp6YVhSNVBDOWlQZ29nSUNBZ1BIQStTbTlvWVc0Z1IyRmtiMnhwYmlCUWNtOWpaWE56SUVOb1pXMXBjM1J5ZVNCRFpXNTBjbVU4TDNBK0NpQWdJQ0E4Y0Q1VWRYSnJkU3dnUm1sdWJHRnVaRHd2Y0Q0S0lDQWdJQT09IiB3aWR0aD0iMzAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMjAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgcG9wdXBfOWE4ZjkwMjdhMDA2NDU2ZDhmZGM0NjE3YmZlM2E4ZTEuc2V0Q29udGVudChpX2ZyYW1lX2UxYjhmYWM0OTQ3ODQ2NGZhMGI1MWZlYjMxMTBlNzhkKTsKICAgICAgICAKCiAgICAgICAgbWFya2VyX2RkODA2YjQ5MjJhZTQ5NmU4ZGZjYjgwNGMzNGRmZGVlLmJpbmRQb3B1cChwb3B1cF85YThmOTAyN2EwMDY0NTZkOGZkYzQ2MTdiZmUzYThlMSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgbWFya2VyX2RkODA2YjQ5MjJhZTQ5NmU4ZGZjYjgwNGMzNGRmZGVlLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENsaWNrIG1lIQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIG1hcmtlcl85YjI
yMmNhNjdjZDM0NGVmODE0MzNkNmU3YmMxNmExNyA9IEwubWFya2VyKAogICAgICAgICAgICAgICAgWzU1Ljc4OTM5MSwgMTIuNTIwMjYyXSwKICAgICAgICAgICAgICAgIHt9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzVlNTIzNzEzOWY4MzRhMDQ5MTdmYzRjNjIzMTEyZmM5KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgaWNvbl9kMTYyMWE3NTYwZmM0ZjNiOWIwODAyZGQ3ZDQ4YzUwNiA9IEwuQXdlc29tZU1hcmtlcnMuaWNvbigKICAgICAgICAgICAgICAgIHsiZXh0cmFDbGFzc2VzIjogImZhLXJvdGF0ZS0wIiwgImljb24iOiAiaW5mby1zaWduIiwgImljb25Db2xvciI6ICJ3aGl0ZSIsICJtYXJrZXJDb2xvciI6ICJibHVlIiwgInByZWZpeCI6ICJnbHlwaGljb24ifQogICAgICAgICAgICApOwogICAgICAgICAgICBtYXJrZXJfOWIyMjJjYTY3Y2QzNDRlZjgxNDMzZDZlN2JjMTZhMTcuc2V0SWNvbihpY29uX2QxNjIxYTc1NjBmYzRmM2I5YjA4MDJkZDdkNDhjNTA2KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9iZGIyMzc0M2NjMzI0Y2Q0YjY2ZGVmN2MyYTU4OTZhZSA9IEwucG9wdXAoeyJtYXhXaWR0aCI6IDUwMH0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGlfZnJhbWVfNGZkY2Y2N2U5ZmIzNGZhN2JiZDI2YTBkZjBiMTA5YTIgPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQUtJQ0FnSUR4aVBsUmxZMmh1YVdOaGJDQlZibWwyWlhKemFYUjVJRzltSUVSbGJtMWhjbXM4TDJJK0NpQWdJQ0E4Y0Q1RVpYQmhjblJ0Wlc1MElHOW1JRU5vWlcxcFkyRnNJR0Z1WkNCQ2FXOWphR1Z0YVdOaGJDQkZibWRwYm1WbGNtbHVaend2Y0Q0S0lDQWdJRHh3UGt4NWJtZGllU3dnUkdWdWJXRnlhend2Y0Q0S0lDQWdJQT09IiB3aWR0aD0iMzAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMjAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgcG9wdXBfYmRiMjM3NDNjYzMyNGNkNGI2NmRlZjdjMmE1ODk2YWUuc2V0Q29udGVudChpX2ZyYW1lXzRmZGNmNjdlOWZiMzRmYTdiYmQyNmEwZGYwYjEwOWEyKTsKICAgICAgICAKCiAgICAgICAgbWFya2VyXzliMjIyY2E2N2NkMzQ0ZWY4MTQzM2Q2ZTdiYzE2YTE3LmJpbmRQb3B1cChwb3B1cF9iZGIyMzc0M2NjMzI0Y2Q0YjY2ZGVmN2MyYTU4OTZhZSkKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgbWFya2VyXzliMjIyY2E2N2NkMzQ0ZWY4MTQzM2Q2ZTdiYzE2YTE3LmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENsaWNrIG1lIQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIG1hcmtlcl82OGNmZjRkNTA5NDE0OGQxYWUzN2JhMDQyNDBhMDgyOSA9IEwubWFya2VyKAogICAgICAgICAgICAgICAgWzY1LjYxNzA2OCwgMjIuMTM3MTE4XSwKICAgICAgICAgICAgICAgIHt9CiAgICAgICAgICAgICkuYWRkVG8obWFwXzVlNTIzNzEzOWY4MzRhMDQ5MTdmYzRjNjIzMTEyZmM5KTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgaWNvbl82NGZmODUwODI5Y2E0MmNmOGY3YzM0NDkyOWE5MjFlOSA9IEwuQXdlc29tZU1hcmtlcnMuaWNvbigKICAgICAgICAgICAgICAgIHsiZXh0cmFDbGFzc2VzIjogImZhLXJvdGF0ZS0wIiwgImljb24iOiAiaW5mby1zaWduIiwgImljb25Db2xvciI6ICJ3aGl0ZSIsICJtYXJrZXJDb2xvciI6ICJibHVlIiwgInByZWZpeCI6ICJnbHlwaGljb24ifQogICAgICAgICAgICApOwogICAgICAgICAgICBtYXJrZXJfNjhjZmY0ZDUwOTQxNDhkMWFlMzdiYTA0MjQwYTA4Mjkuc2V0SWNvbihpY29uXzY0ZmY4NTA4MjljYTQyY2Y4ZjdjMzQ0OTI5YTkyMWU5KTsKICAgICAgICAKICAgIAogICAgICAgIHZhciBwb3B1cF9jZDg5MTc4YWQ3YmY0NmIzYjg2N2I1YmI5ZDRmOGU3NiA9IEwucG9wdXAoeyJtYXhXaWR0aCI6IDUwMH0pOwoKICAgICAgICAKICAgICAgICAgICAgdmFyIGlfZnJhbWVfOTNiNjY3MmVkOGY3NGVlZGI0ZjkzYjEzZjJhMzM4YTggPSAkKGA8aWZyYW1lIHNyYz0iZGF0YTp0ZXh0L2h0bWw7Y2hhcnNldD11dGYtODtiYXNlNjQsQ2lBZ0lDQUtJQ0FnSUR4aVBreDFiR1hEcFNCVmJtbDJaWEp6YVhSNUlHOW1JRlJsWTJodWIyeHZaM2s4TDJJK0NpQWdJQ0E4Y0Q1RVpYQmhjblJ0Wlc1MElHOW1JRVZ1WjJsdVpXVnlhVzVuSUZOamFXVnVZMlZ6SUdGdVpDQk5ZWFJvWlcxaGRHbGpjend2Y0Q0S0lDQWdJRHh3UGt4MWJHWERwU3dnVTNkbFpHVnVQQzl3UGdvZ0lDQWciIHdpZHRoPSIzMDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIyMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICBwb3B1cF9jZDg5MTc4YWQ3YmY0NmIzYjg2N2I1YmI5ZDRmOGU3Ni5zZXRDb250ZW50KGlfZnJhbWVfOTNiNjY3MmVkOGY3NGVlZGI0ZjkzYjEzZjJhMzM4YTgpOwogICAgICAgIAoKICAgICAgICBtYXJrZXJfNjhjZmY0ZDUwOTQxNDhkMWFlMzdiYTA0MjQwYTA4MjkuYmluZFBvcHVwKHBvcHVwX2NkODkxNzhhZDdiZjQ2YjNiODY3YjViYjlkNGY4ZTc2KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBtYXJrZXJfNjhjZmY0ZDUwOTQxNDhkMWFlMzdiYTA0MjQwYTA4MjkuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2xpY2sgbWUhCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyX2JiZDI5ZTBiMjE1MDQ3MDc4MjZlNjBiMDVhODgyNTZiID0gTC5tYXJrZXIoCiAgICAgICAgICAgICAgICBbNTcuMDE2MDAyLCA5Ljk3MzUzNF0sCiAgICAgICAgICAgICAgICB7fQogICAgICAgICAgICApLmFkZFRvKG1hcF81ZTUyMzcxMzlmODM0YTA0OTE3ZmM0YzY
yMzExMmZjOSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGljb25fODc5MmUxYTk5MTgyNGUzYTgxNmJlZjRjMDkwNTZkYTYgPSBMLkF3ZXNvbWVNYXJrZXJzLmljb24oCiAgICAgICAgICAgICAgICB7ImV4dHJhQ2xhc3NlcyI6ICJmYS1yb3RhdGUtMCIsICJpY29uIjogImluZm8tc2lnbiIsICJpY29uQ29sb3IiOiAid2hpdGUiLCAibWFya2VyQ29sb3IiOiAiYmx1ZSIsICJwcmVmaXgiOiAiZ2x5cGhpY29uIn0KICAgICAgICAgICAgKTsKICAgICAgICAgICAgbWFya2VyX2JiZDI5ZTBiMjE1MDQ3MDc4MjZlNjBiMDVhODgyNTZiLnNldEljb24oaWNvbl84NzkyZTFhOTkxODI0ZTNhODE2YmVmNGMwOTA1NmRhNik7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfOWJjOTcyZDc5NzU0NGRjZTk4YWVlOTI4Y2NhYjhlODIgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiA1MDB9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBpX2ZyYW1lX2I1MmVmMTIzMWRlNzQ2YTlhYTM0ZGIwOTM3NmM1MzE4ID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FLSUNBZ0lEeGlQbFZ1YVhabGNuTnBkSGtnYjJZZ1FXRnNZbTl5Wnp3dllqNEtJQ0FnSUR4d1BrUmxjR0Z5ZEcxbGJuUWdiMllnUlc1bGNtZDVJRlJsWTJodWIyeHZaM2s4TDNBK0NpQWdJQ0E4Y0Q1QllXeGliM0puTENCRVpXNXRZWEpyUEM5d1Bnb2dJQ0FnIiB3aWR0aD0iMzAwIiBzdHlsZT0iYm9yZGVyOm5vbmUgIWltcG9ydGFudDsiIGhlaWdodD0iMjAwIj48L2lmcmFtZT5gKVswXTsKICAgICAgICAgICAgcG9wdXBfOWJjOTcyZDc5NzU0NGRjZTk4YWVlOTI4Y2NhYjhlODIuc2V0Q29udGVudChpX2ZyYW1lX2I1MmVmMTIzMWRlNzQ2YTlhYTM0ZGIwOTM3NmM1MzE4KTsKICAgICAgICAKCiAgICAgICAgbWFya2VyX2JiZDI5ZTBiMjE1MDQ3MDc4MjZlNjBiMDVhODgyNTZiLmJpbmRQb3B1cChwb3B1cF85YmM5NzJkNzk3NTQ0ZGNlOThhZWU5MjhjY2FiOGU4MikKICAgICAgICA7CgogICAgICAgIAogICAgCiAgICAKICAgICAgICAgICAgbWFya2VyX2JiZDI5ZTBiMjE1MDQ3MDc4MjZlNjBiMDVhODgyNTZiLmJpbmRUb29sdGlwKAogICAgICAgICAgICAgICAgYDxkaXY+CiAgICAgICAgICAgICAgICAgICAgIENsaWNrIG1lIQogICAgICAgICAgICAgICAgIDwvZGl2PmAsCiAgICAgICAgICAgICAgICB7InN0aWNreSI6IHRydWV9CiAgICAgICAgICAgICk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIG1hcmtlcl82OTI0MDkxM2FlOTQ0MjYyODRiYTcwMzI4YzlhZTkxOCA9IEwubWFya2VyKAogICAgICAgICAgICAgICAgWzQ4Ljc4NjIwNywgOS4xNjMzOTFdLAogICAgICAgICAgICAgICAge30KICAgICAgICAgICAgKS5hZGRUbyhtYXBfNWU1MjM3MTM5ZjgzNGEwNDkxN2ZjNGM2MjMxMTJmYzkpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBpY29uX2QxMjAxYjNhZjU5YzQxNjlhNTc5NDIyZmNjNzk5NGY1ID0gTC5Bd2Vzb21lTWFya2Vycy5pY29uKAogICAgICAgICAgICAgICAgeyJleHRyYUNsYXNzZXMiOiAiZmEtcm90YXRlLTAiLCAiaWNvbiI6ICJpbmZvLXNpZ24iLCAiaWNvbkNvbG9yIjogIndoaXRlIiwgIm1hcmtlckNvbG9yIjogImJsdWUiLCAicHJlZml4IjogImdseXBoaWNvbiJ9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIG1hcmtlcl82OTI0MDkxM2FlOTQ0MjYyODRiYTcwMzI4YzlhZTkxOC5zZXRJY29uKGljb25fZDEyMDFiM2FmNTljNDE2OWE1Nzk0MjJmY2M3OTk0ZjUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzAzMDUzZThlN2ViZDQwMjdhZDQ2YWRjMmMyYTQ0OWQyID0gTC5wb3B1cCh7Im1heFdpZHRoIjogNTAwfSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaV9mcmFtZV8xNzUwYzI4YjYxODU0OWFjOTFkMThlNGQwNjM2N2Y4YiA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBS0lDQWdJRHhpUGxWdWFYWmxjbk5wZEhrZ2IyWWdVM1IxZEhSbllYSjBQQzlpUGdvZ0lDQWdQSEErU1c1emRHbDBkWFJsSUdadmNpQkRiMjFpZFhOMGFXOXVJRlJsWTJodWIyeHZaM2s4TDNBK0NpQWdJQ0E4Y0Q1VGRIVjBkR2RoY25Rc0lFZGxjbTFoYm5rOEwzQStDaUFnSUNBPSIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwXzAzMDUzZThlN2ViZDQwMjdhZDQ2YWRjMmMyYTQ0OWQyLnNldENvbnRlbnQoaV9mcmFtZV8xNzUwYzI4YjYxODU0OWFjOTFkMThlNGQwNjM2N2Y4Yik7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl82OTI0MDkxM2FlOTQ0MjYyODRiYTcwMzI4YzlhZTkxOC5iaW5kUG9wdXAocG9wdXBfMDMwNTNlOGU3ZWJkNDAyN2FkNDZhZGMyYzJhNDQ5ZDIpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl82OTI0MDkxM2FlOTQ0MjYyODRiYTcwMzI4YzlhZTkxOC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfYTJiNzBiN2E5NzQyNGQ3YzljZjI2ZjBiMzhmYzU0N2QgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFs1NS42NTEzMjMsIDEyLjU1NzY2NV0sCiAgICAgICAgICAgICAgICB7fQogICAgICAgICAgICApLmFkZFRvKG1hcF81ZTUyMzcxMzlmODM0YTA0OTE3ZmM0YzYyMzExMmZjOSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGljb25fMjNhMTA3ZWNhNmU5NDRlOWEzNGJiMWVhZTBmYmIyM2MgPSBMLkF3ZXNvbWVNYXJrZXJzLmljb24oCiAgICAgICAgICAgICAgICB7ImV4dHJhQ2xhc3NlcyI6ICJmYS1yb3RhdGUtMCIsICJpY29uIjogImluZm8tc2lnbiIsICJpY29uQ29sb3IiOiAid2hpdGUiLCAibWFya2VyQ29sb3IiOiAiYmx
1ZSIsICJwcmVmaXgiOiAiZ2x5cGhpY29uIn0KICAgICAgICAgICAgKTsKICAgICAgICAgICAgbWFya2VyX2EyYjcwYjdhOTc0MjRkN2M5Y2YyNmYwYjM4ZmM1NDdkLnNldEljb24oaWNvbl8yM2ExMDdlY2E2ZTk0NGU5YTM0YmIxZWFlMGZiYjIzYyk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfN2M1N2Q3ZDBmYjZhNDE1ZmIxZThhZGQxZjA4ZGI1MDYgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiA1MDB9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBpX2ZyYW1lX2YxOGU5OWY5ODg1ODQyZThiYmQwZjA4NDgzYTNiN2UzID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FLSUNBZ0lEeGlQazFCVGlCRmJtVnlaM2tnVTI5c2RYUnBiMjV6UEM5aVBnb2dJQ0FnUEhBK0lFTnZjR1Z1YUdGblpXNHNJRVJsYm0xaGNtczhMM0ErQ2lBZ0lDQT0iIHdpZHRoPSIzMDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIyMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICBwb3B1cF83YzU3ZDdkMGZiNmE0MTVmYjFlOGFkZDFmMDhkYjUwNi5zZXRDb250ZW50KGlfZnJhbWVfZjE4ZTk5Zjk4ODU4NDJlOGJiZDBmMDg0ODNhM2I3ZTMpOwogICAgICAgIAoKICAgICAgICBtYXJrZXJfYTJiNzBiN2E5NzQyNGQ3YzljZjI2ZjBiMzhmYzU0N2QuYmluZFBvcHVwKHBvcHVwXzdjNTdkN2QwZmI2YTQxNWZiMWU4YWRkMWYwOGRiNTA2KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBtYXJrZXJfYTJiNzBiN2E5NzQyNGQ3YzljZjI2ZjBiMzhmYzU0N2QuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2xpY2sgbWUhCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyXzJlNTI1NjZiYzk1MDQwOGFiOTA2MmNjNGNlMjE1MDQwID0gTC5tYXJrZXIoCiAgICAgICAgICAgICAgICBbNDcuNDc0MTU2LCAxOS4wNjAyNF0sCiAgICAgICAgICAgICAgICB7fQogICAgICAgICAgICApLmFkZFRvKG1hcF81ZTUyMzcxMzlmODM0YTA0OTE3ZmM0YzYyMzExMmZjOSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGljb25fNzU3M2U3YTE1NTc0NGJjOGFmMzAxOTJiZDZiZTg5OWMgPSBMLkF3ZXNvbWVNYXJrZXJzLmljb24oCiAgICAgICAgICAgICAgICB7ImV4dHJhQ2xhc3NlcyI6ICJmYS1yb3RhdGUtMCIsICJpY29uIjogImluZm8tc2lnbiIsICJpY29uQ29sb3IiOiAid2hpdGUiLCAibWFya2VyQ29sb3IiOiAiYmx1ZSIsICJwcmVmaXgiOiAiZ2x5cGhpY29uIn0KICAgICAgICAgICAgKTsKICAgICAgICAgICAgbWFya2VyXzJlNTI1NjZiYzk1MDQwOGFiOTA2MmNjNGNlMjE1MDQwLnNldEljb24oaWNvbl83NTczZTdhMTU1NzQ0YmM4YWYzMDE5MmJkNmJlODk5Yyk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfMDhmNzdlMTUzNTIxNGEyMmJkNjhhOWQ4YTA4M2U2YTYgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiA1MDB9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBpX2ZyYW1lXzJhOGM2M2VkNzk0ZTQyYTNiNmRkYWZmYjE4YzNjMzhjID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FLSUNBZ0lEeGlQa2gxYm1kaGNtbGhiaUJCWTJGa1pXMTVJRzltSUZOamFXVnVZMlZ6UEM5aVBnb2dJQ0FnUEhBK1VtVnpaV0Z5WTJnZ1EyVnVkSEpsSUdadmNpQk9ZWFIxY21Gc0lGTmphV1Z1WTJWelBDOXdQZ29nSUNBZ1BIQStRblZrWVhCbGMzUXNJRWgxYm1kaGNuazhMM0ErQ2lBZ0lDQT0iIHdpZHRoPSIzMDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIyMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICBwb3B1cF8wOGY3N2UxNTM1MjE0YTIyYmQ2OGE5ZDhhMDgzZTZhNi5zZXRDb250ZW50KGlfZnJhbWVfMmE4YzYzZWQ3OTRlNDJhM2I2ZGRhZmZiMThjM2MzOGMpOwogICAgICAgIAoKICAgICAgICBtYXJrZXJfMmU1MjU2NmJjOTUwNDA4YWI5MDYyY2M0Y2UyMTUwNDAuYmluZFBvcHVwKHBvcHVwXzA4Zjc3ZTE1MzUyMTRhMjJiZDY4YTlkOGEwODNlNmE2KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBtYXJrZXJfMmU1MjU2NmJjOTUwNDA4YWI5MDYyY2M0Y2UyMTUwNDAuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2xpY2sgbWUhCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyXzVhNTg1MzI4YTdhNzRkOGU4M2U5MGU0NzVlY2VkNzg3ID0gTC5tYXJrZXIoCiAgICAgICAgICAgICAgICBbNDguNDE4ODk3LCAtNC40NzIxMTddLAogICAgICAgICAgICAgICAge30KICAgICAgICAgICAgKS5hZGRUbyhtYXBfNWU1MjM3MTM5ZjgzNGEwNDkxN2ZjNGM2MjMxMTJmYzkpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBpY29uX2MxMmUwM2M5OGJkYTQ1NTg4MjUyNzYxOTAzNWFlNGUyID0gTC5Bd2Vzb21lTWFya2Vycy5pY29uKAogICAgICAgICAgICAgICAgeyJleHRyYUNsYXNzZXMiOiAiZmEtcm90YXRlLTAiLCAiaWNvbiI6ICJpbmZvLXNpZ24iLCAiaWNvbkNvbG9yIjogIndoaXRlIiwgIm1hcmtlckNvbG9yIjogImJsdWUiLCAicHJlZml4IjogImdseXBoaWNvbiJ9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIG1hcmtlcl81YTU4NTMyOGE3YTc0ZDhlODNlOTBlNDc1ZWNlZDc4Ny5zZXRJY29uKGljb25fYzEyZTAzYzk4YmRhNDU1ODgyNTI3NjE5MDM1YWU0ZTIpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzg1MTdkYWY3MjdjYzQ1NDVhYWNiN2VhOWQxNzIzNzUzID0gTC5wb3B1cCh7Im1heFdpZHRoIjogNTAwfSk7CgogICAgICAgIAogICAgICAgICA
gICB2YXIgaV9mcmFtZV8zMWI2Y2Y4MGJmYTI0MDhkOWYzNDY1NGMwYmFjYmY3MiA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBS0lDQWdJRHhpUGtWT1UxUkJJRUp5WlhSaFoyNWxJQ2hPWVhScGIyNWhiQ0JKYm5OMGFYUjFkR1VnYjJZZ1FXUjJZVzVqWldRZ1ZHVmphRzV2Ykc5bmFXVnpJRzltSUVKeWFYUjBZVzU1S1R3dllqNEtJQ0FnSUR4d1BrUmxjR0Z5ZEcxbGJuUWdiMllnUlc1bGNtZDVJRlJsWTJodWIyeHZaM2s4TDNBK0NpQWdJQ0E4Y0Q1Q2NtVnpkQ3dnUm5KaGJtTmxQQzl3UGdvZ0lDQWciIHdpZHRoPSIzMDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIyMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICBwb3B1cF84NTE3ZGFmNzI3Y2M0NTQ1YWFjYjdlYTlkMTcyMzc1My5zZXRDb250ZW50KGlfZnJhbWVfMzFiNmNmODBiZmEyNDA4ZDlmMzQ2NTRjMGJhY2JmNzIpOwogICAgICAgIAoKICAgICAgICBtYXJrZXJfNWE1ODUzMjhhN2E3NGQ4ZTgzZTkwZTQ3NWVjZWQ3ODcuYmluZFBvcHVwKHBvcHVwXzg1MTdkYWY3MjdjYzQ1NDVhYWNiN2VhOWQxNzIzNzUzKQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBtYXJrZXJfNWE1ODUzMjhhN2E3NGQ4ZTgzZTkwZTQ3NWVjZWQ3ODcuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2xpY2sgbWUhCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyXzlkM2NmZDdjMTI3YTQ2NTc4NjUxYjQ0NWI5NGMzZGI5ID0gTC5tYXJrZXIoCiAgICAgICAgICAgICAgICBbNDUuNDc4MTc4LCA5LjIyODY5OV0sCiAgICAgICAgICAgICAgICB7fQogICAgICAgICAgICApLmFkZFRvKG1hcF81ZTUyMzcxMzlmODM0YTA0OTE3ZmM0YzYyMzExMmZjOSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGljb25fYzRlMTQzNjQxOTM5NDkxNmExNTQ1ODRiNDRkMzlkN2EgPSBMLkF3ZXNvbWVNYXJrZXJzLmljb24oCiAgICAgICAgICAgICAgICB7ImV4dHJhQ2xhc3NlcyI6ICJmYS1yb3RhdGUtMCIsICJpY29uIjogImluZm8tc2lnbiIsICJpY29uQ29sb3IiOiAid2hpdGUiLCAibWFya2VyQ29sb3IiOiAiYmx1ZSIsICJwcmVmaXgiOiAiZ2x5cGhpY29uIn0KICAgICAgICAgICAgKTsKICAgICAgICAgICAgbWFya2VyXzlkM2NmZDdjMTI3YTQ2NTc4NjUxYjQ0NWI5NGMzZGI5LnNldEljb24oaWNvbl9jNGUxNDM2NDE5Mzk0OTE2YTE1NDU4NGI0NGQzOWQ3YSk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfMTQwMDg1ODM0NTFlNDk5YzgzYTU0YTYwY2I5MGY0YjggPSBMLnBvcHVwKHsibWF4V2lkdGgiOiA1MDB9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBpX2ZyYW1lX2ZkZDM1YmRjNzY1MjQwOTg5OTBlMTZjOTJiMzY5NmUwID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FLSUNBZ0lEeGlQbEJ2YkdsMFpXTnVhV052SUdScElFMXBiR0Z1Ynp3dllqNEtJQ0FnSUR4d1BrUmxjR0Z5ZEcxbGJuUWdiMllnUTJobGJXbHpkSEo1TENCTllYUmxjbWxoYkhNc0lHRnVaQ0JEYUdWdGFXTmhiQ0JGYm1kcGJtVmxjbWx1UEM5d1Bnb2dJQ0FnUEhBK1RXbHNZVzRzSUVsMFlXeDVQQzl3UGdvZ0lDQWciIHdpZHRoPSIzMDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIyMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICBwb3B1cF8xNDAwODU4MzQ1MWU0OTljODNhNTRhNjBjYjkwZjRiOC5zZXRDb250ZW50KGlfZnJhbWVfZmRkMzViZGM3NjUyNDA5ODk5MGUxNmM5MmIzNjk2ZTApOwogICAgICAgIAoKICAgICAgICBtYXJrZXJfOWQzY2ZkN2MxMjdhNDY1Nzg2NTFiNDQ1Yjk0YzNkYjkuYmluZFBvcHVwKHBvcHVwXzE0MDA4NTgzNDUxZTQ5OWM4M2E1NGE2MGNiOTBmNGI4KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBtYXJrZXJfOWQzY2ZkN2MxMjdhNDY1Nzg2NTFiNDQ1Yjk0YzNkYjkuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2xpY2sgbWUhCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyX2QxNGM1NjNkNDEwNDRmMzBiZGI0YzYxNTY3ZmZkNDNlID0gTC5tYXJrZXIoCiAgICAgICAgICAgICAgICBbNTAuMDY2ODg3LCAxOS45MTM2NDldLAogICAgICAgICAgICAgICAge30KICAgICAgICAgICAgKS5hZGRUbyhtYXBfNWU1MjM3MTM5ZjgzNGEwNDkxN2ZjNGM2MjMxMTJmYzkpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBpY29uXzY5YjUwNDIwMmQ1OTQzMTc5NmQ2NmIyYTgzYjU0ODYwID0gTC5Bd2Vzb21lTWFya2Vycy5pY29uKAogICAgICAgICAgICAgICAgeyJleHRyYUNsYXNzZXMiOiAiZmEtcm90YXRlLTAiLCAiaWNvbiI6ICJpbmZvLXNpZ24iLCAiaWNvbkNvbG9yIjogIndoaXRlIiwgIm1hcmtlckNvbG9yIjogImJsdWUiLCAicHJlZml4IjogImdseXBoaWNvbiJ9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIG1hcmtlcl9kMTRjNTYzZDQxMDQ0ZjMwYmRiNGM2MTU2N2ZmZDQzZS5zZXRJY29uKGljb25fNjliNTA0MjAyZDU5NDMxNzk2ZDY2YjJhODNiNTQ4NjApOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2ZkMTk4MjI0OTg5MzQxODA5ODEwMTMwOGEwMWVjMDY0ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogNTAwfSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaV9mcmFtZV9mYTljOTdjOTVmNmE0NjY2OGIyYzBjOTQ5NjllNDNjMiA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBS0lDQWdJRHhpUGtGSFNDQlZibWw
yWlhKemFYUjVJRzltSUZOamFXVnVZMlVnWVc1a0lGUmxZMmh1YjJ4dlozazhMMkkrQ2lBZ0lDQThjRDVEWlc1MFpYSWdiMllnUlc1bGNtZDVQQzl3UGdvZ0lDQWdQSEErUzNKaGE4T3pkeXdnVUc5c1lXNWtQQzl3UGdvZ0lDQWciIHdpZHRoPSIzMDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIyMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICBwb3B1cF9mZDE5ODIyNDk4OTM0MTgwOTgxMDEzMDhhMDFlYzA2NC5zZXRDb250ZW50KGlfZnJhbWVfZmE5Yzk3Yzk1ZjZhNDY2NjhiMmMwYzk0OTY5ZTQzYzIpOwogICAgICAgIAoKICAgICAgICBtYXJrZXJfZDE0YzU2M2Q0MTA0NGYzMGJkYjRjNjE1NjdmZmQ0M2UuYmluZFBvcHVwKHBvcHVwX2ZkMTk4MjI0OTg5MzQxODA5ODEwMTMwOGEwMWVjMDY0KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBtYXJrZXJfZDE0YzU2M2Q0MTA0NGYzMGJkYjRjNjE1NjdmZmQ0M2UuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2xpY2sgbWUhCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyXzBmZGE0MDFkMjhmMjQ4ZjA4NDEyM2I3MmYzMDU5OGNkID0gTC5tYXJrZXIoCiAgICAgICAgICAgICAgICBbNTAuMjkzNTMxLCAxOC42ODAxOTddLAogICAgICAgICAgICAgICAge30KICAgICAgICAgICAgKS5hZGRUbyhtYXBfNWU1MjM3MTM5ZjgzNGEwNDkxN2ZjNGM2MjMxMTJmYzkpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBpY29uX2E5MDQ0MTc4YmZhMjQ0YTc5ZDk4MDQ5NTU1YWIzZmY1ID0gTC5Bd2Vzb21lTWFya2Vycy5pY29uKAogICAgICAgICAgICAgICAgeyJleHRyYUNsYXNzZXMiOiAiZmEtcm90YXRlLTAiLCAiaWNvbiI6ICJpbmZvLXNpZ24iLCAiaWNvbkNvbG9yIjogIndoaXRlIiwgIm1hcmtlckNvbG9yIjogImJsdWUiLCAicHJlZml4IjogImdseXBoaWNvbiJ9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIG1hcmtlcl8wZmRhNDAxZDI4ZjI0OGYwODQxMjNiNzJmMzA1OThjZC5zZXRJY29uKGljb25fYTkwNDQxNzhiZmEyNDRhNzlkOTgwNDk1NTVhYjNmZjUpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwXzA4YzhjZGNkNjRiNjRkYWY4YWFkM2RlZTQyZGY4NjM0ID0gTC5wb3B1cCh7Im1heFdpZHRoIjogNTAwfSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaV9mcmFtZV9mNzNkZWM5Zjg3ZTQ0ZTljOGVkNTExNWQ4MGJkOGQ3MSA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBS0lDQWdJRHhpUGxOcGJHVnphV0Z1SUZWdWFYWmxjbk5wZEhrZ2IyWWdWR1ZqYUc1dmJHOW5lVHd2WWo0S0lDQWdJRHh3UGtsdWMzUnBkSFYwWlNCdlppQlVhR1Z5YldGc0lGUmxZMmh1YjJ4dlozazhMM0ErQ2lBZ0lDQThjRDVIYkdsM2FXTmxMQ0JRYjJ4aGJtUThMM0ErQ2lBZ0lDQT0iIHdpZHRoPSIzMDAiIHN0eWxlPSJib3JkZXI6bm9uZSAhaW1wb3J0YW50OyIgaGVpZ2h0PSIyMDAiPjwvaWZyYW1lPmApWzBdOwogICAgICAgICAgICBwb3B1cF8wOGM4Y2RjZDY0YjY0ZGFmOGFhZDNkZWU0MmRmODYzNC5zZXRDb250ZW50KGlfZnJhbWVfZjczZGVjOWY4N2U0NGU5YzhlZDUxMTVkODBiZDhkNzEpOwogICAgICAgIAoKICAgICAgICBtYXJrZXJfMGZkYTQwMWQyOGYyNDhmMDg0MTIzYjcyZjMwNTk4Y2QuYmluZFBvcHVwKHBvcHVwXzA4YzhjZGNkNjRiNjRkYWY4YWFkM2RlZTQyZGY4NjM0KQogICAgICAgIDsKCiAgICAgICAgCiAgICAKICAgIAogICAgICAgICAgICBtYXJrZXJfMGZkYTQwMWQyOGYyNDhmMDg0MTIzYjcyZjMwNTk4Y2QuYmluZFRvb2x0aXAoCiAgICAgICAgICAgICAgICBgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgQ2xpY2sgbWUhCiAgICAgICAgICAgICAgICAgPC9kaXY+YCwKICAgICAgICAgICAgICAgIHsic3RpY2t5IjogdHJ1ZX0KICAgICAgICAgICAgKTsKICAgICAgICAKICAgIAogICAgICAgICAgICB2YXIgbWFya2VyX2E2NjM1NmFkMDA2YzRmM2M4NWUzNjg5Y2NiZWJjNmYwID0gTC5tYXJrZXIoCiAgICAgICAgICAgICAgICBbMzguNzM2NjQzLCAtOS4xMzg2NTFdLAogICAgICAgICAgICAgICAge30KICAgICAgICAgICAgKS5hZGRUbyhtYXBfNWU1MjM3MTM5ZjgzNGEwNDkxN2ZjNGM2MjMxMTJmYzkpOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBpY29uX2JiYWViZTU0NTUzNTQwNWNiYzllYjMxZjM4OTE4MzlkID0gTC5Bd2Vzb21lTWFya2Vycy5pY29uKAogICAgICAgICAgICAgICAgeyJleHRyYUNsYXNzZXMiOiAiZmEtcm90YXRlLTAiLCAiaWNvbiI6ICJpbmZvLXNpZ24iLCAiaWNvbkNvbG9yIjogIndoaXRlIiwgIm1hcmtlckNvbG9yIjogImJsdWUiLCAicHJlZml4IjogImdseXBoaWNvbiJ9CiAgICAgICAgICAgICk7CiAgICAgICAgICAgIG1hcmtlcl9hNjYzNTZhZDAwNmM0ZjNjODVlMzY4OWNjYmViYzZmMC5zZXRJY29uKGljb25fYmJhZWJlNTQ1NTM1NDA1Y2JjOWViMzFmMzg5MTgzOWQpOwogICAgICAgIAogICAgCiAgICAgICAgdmFyIHBvcHVwX2IzNDMzM2VkODZkNzQ2MTI5YTdlNmU1MmNlM2Q2ZmYzID0gTC5wb3B1cCh7Im1heFdpZHRoIjogNTAwfSk7CgogICAgICAgIAogICAgICAgICAgICB2YXIgaV9mcmFtZV82NTFkNDc5NzJhNWY0MzczYTRlYjZkOTE1MzdjYWJhYiA9ICQoYDxpZnJhbWUgc3JjPSJkYXRhOnRleHQvaHRtbDtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxDaUFnSUNBS0lDQWdJRHhpUGtsdWMzUnBkSFYwYnlCVGRYQmxjbWx2Y2lCVXc2bGpibWxqYnp3dllqNEtJQ0FnSUR4d1BrMWxZMmhoYm1sallXd2dSVzVuYVc1bFpYSnBibWNnUkdWd1lYSjBiV1Z1ZEN3OEwzQStDaUFnSUNBOGNENU1hWE5pYjI0c0lGQnZjblIxWjJGc1BDOXdQZ29nSUNBZyIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU
+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2IzNDMzM2VkODZkNzQ2MTI5YTdlNmU1MmNlM2Q2ZmYzLnNldENvbnRlbnQoaV9mcmFtZV82NTFkNDc5NzJhNWY0MzczYTRlYjZkOTE1MzdjYWJhYik7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl9hNjYzNTZhZDAwNmM0ZjNjODVlMzY4OWNjYmViYzZmMC5iaW5kUG9wdXAocG9wdXBfYjM0MzMzZWQ4NmQ3NDYxMjlhN2U2ZTUyY2UzZDZmZjMpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl9hNjYzNTZhZDAwNmM0ZjNjODVlMzY4OWNjYmViYzZmMC5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAogICAgCiAgICAgICAgICAgIHZhciBtYXJrZXJfMDE5ODlmYzkwYjJhNGUyYzlmYTAxY2ZmYzFiMzIwOGYgPSBMLm1hcmtlcigKICAgICAgICAgICAgICAgIFs1MS43NzEzMzIsIDE0LjMwOTQ1N10sCiAgICAgICAgICAgICAgICB7fQogICAgICAgICAgICApLmFkZFRvKG1hcF81ZTUyMzcxMzlmODM0YTA0OTE3ZmM0YzYyMzExMmZjOSk7CiAgICAgICAgCiAgICAKICAgICAgICAgICAgdmFyIGljb25fZjI0MTEyOGY1YzNiNDdiMDg5ZDk3Y2VmMWI0MzlmNTMgPSBMLkF3ZXNvbWVNYXJrZXJzLmljb24oCiAgICAgICAgICAgICAgICB7ImV4dHJhQ2xhc3NlcyI6ICJmYS1yb3RhdGUtMCIsICJpY29uIjogImluZm8tc2lnbiIsICJpY29uQ29sb3IiOiAid2hpdGUiLCAibWFya2VyQ29sb3IiOiAiYmx1ZSIsICJwcmVmaXgiOiAiZ2x5cGhpY29uIn0KICAgICAgICAgICAgKTsKICAgICAgICAgICAgbWFya2VyXzAxOTg5ZmM5MGIyYTRlMmM5ZmEwMWNmZmMxYjMyMDhmLnNldEljb24oaWNvbl9mMjQxMTI4ZjVjM2I0N2IwODlkOTdjZWYxYjQzOWY1Myk7CiAgICAgICAgCiAgICAKICAgICAgICB2YXIgcG9wdXBfZjJiOTdmZWVlYzljNDdhMGIzMzBjNThkMmUxOGE3N2YgPSBMLnBvcHVwKHsibWF4V2lkdGgiOiA1MDB9KTsKCiAgICAgICAgCiAgICAgICAgICAgIHZhciBpX2ZyYW1lX2M0N2VmZDc5MDFmNDRiZTdiY2I5OTQ3MmVkNzZjY2ZkID0gJChgPGlmcmFtZSBzcmM9ImRhdGE6dGV4dC9odG1sO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LENpQWdJQ0FLSUNBZ0lEeGlQa3hQUjBVZ1JHVjFkSE5qYUd4aGJtUWdSMjFpU0R3dllqNEtJQ0FnSUR4d1BrTnZkSFJpZFhNc1IyVnliV0Z1ZVR3dmNENEtJQ0FnSUE9PSIgd2lkdGg9IjMwMCIgc3R5bGU9ImJvcmRlcjpub25lICFpbXBvcnRhbnQ7IiBoZWlnaHQ9IjIwMCI+PC9pZnJhbWU+YClbMF07CiAgICAgICAgICAgIHBvcHVwX2YyYjk3ZmVlZWM5YzQ3YTBiMzMwYzU4ZDJlMThhNzdmLnNldENvbnRlbnQoaV9mcmFtZV9jNDdlZmQ3OTAxZjQ0YmU3YmNiOTk0NzJlZDc2Y2NmZCk7CiAgICAgICAgCgogICAgICAgIG1hcmtlcl8wMTk4OWZjOTBiMmE0ZTJjOWZhMDFjZmZjMWIzMjA4Zi5iaW5kUG9wdXAocG9wdXBfZjJiOTdmZWVlYzljNDdhMGIzMzBjNThkMmUxOGE3N2YpCiAgICAgICAgOwoKICAgICAgICAKICAgIAogICAgCiAgICAgICAgICAgIG1hcmtlcl8wMTk4OWZjOTBiMmE0ZTJjOWZhMDFjZmZjMWIzMjA4Zi5iaW5kVG9vbHRpcCgKICAgICAgICAgICAgICAgIGA8ZGl2PgogICAgICAgICAgICAgICAgICAgICBDbGljayBtZSEKICAgICAgICAgICAgICAgICA8L2Rpdj5gLAogICAgICAgICAgICAgICAgeyJzdGlja3kiOiB0cnVlfQogICAgICAgICAgICApOwogICAgICAgIAo8L3NjcmlwdD4=&#34; style=&#34;position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;&#34; allowfullscreen webkitallowfullscreen mozallowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
